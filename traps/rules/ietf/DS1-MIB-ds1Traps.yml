- mapping: |-
    #!blobl
    root = this
    root.out.origin.agent.name = "IETF DS1-MIB"
- switch:
  - check: this.trap.SpecificTrap == 1
    # dsx1LineStatusChange
    #
    # A dsx1LineStatusChange trap is sent when the value of an instance dsx1LineStatus changes.
    #
    # dsx1LineStatus (INTEGER) - This variable indicates the line status of the interface.
    # dsx1LineStatusLastChange (TimeTicks) - The value of MIB II's sysUpTime object at the time this DS1 entered its
    #   current line status state.
    processors:
      - mapping: |-
          #!blobl
          root = this

          meta varbinds_ok = false
          if this.trap.VarBinds.length() > 1 {
            if this.trap.VarBinds.index(0).OID.has_prefix(".1.3.6.1.2.1.10.18.6.1.10") {
            if this.trap.VarBinds.index(1).OID.has_prefix(".1.3.6.1.2.1.10.18.6.1.16") {
              meta varbinds_ok = true
          }}}

      - switch:
        - check: metadata("varbinds_ok")
          processors:
            - mapping: |-
                #!blobl
                root = this

                meta dsx1LineStatus = this.trap.VarBinds.index(0).Value

                root.out.ietf.dsx1LineStatus = this.trap.VarBinds.index(0).Value
                root.out.ietf.dsx1LineStatusLastChange = this.trap.VarBinds.index(1).Value

                root.TEMP.alarms = ""
                if root.out.ietf.dsx1LineStatus.bitwise_and(1) == 1 || root.out.ietf.dsx1LineStatus == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "no alarm"
                }
                if root.out.ietf.dsx1LineStatus.bitwise_and(2) == 2 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "far-end LOF"
                }
                if root.out.ietf.dsx1LineStatus.bitwise_and(4) == 4 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "near-end sending LOF"
                }
                if root.out.ietf.dsx1LineStatus.bitwise_and(8) == 8 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "far-end sending AIS"
                }
                if root.out.ietf.dsx1LineStatus.bitwise_and(16) == 16 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "near-end sending AIS"
                }
                if root.out.ietf.dsx1LineStatus.bitwise_and(32) == 32 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "near-end LOF"
                }
                if root.out.ietf.dsx1LineStatus.bitwise_and(64) == 64 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "near-end LOS"
                }
                if root.out.ietf.dsx1LineStatus.bitwise_and(128) == 128 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "near-end looped"
                }
                if root.out.ietf.dsx1LineStatus.bitwise_and(256) == 256 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "E1 TS16 AIS"
                }
                if root.out.ietf.dsx1LineStatus.bitwise_and(512) == 512 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "far-end sending TS16 LOMF"
                }
                if root.out.ietf.dsx1LineStatus.bitwise_and(1024) == 1024 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "near-end sending TS16 LOMF"
                }
                if root.out.ietf.dsx1LineStatus.bitwise_and(2048) == 2048 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "near-end detects test code"
                }
                if root.out.ietf.dsx1LineStatus.bitwise_and(4096) == 4096 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "other"
                }
                if root.out.ietf.dsx1LineStatus.bitwise_and(8192) == 8192 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "near-end unavailable"
                }
                if root.out.ietf.dsx1LineStatus.bitwise_and(16384) == 16384 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "carrier equipment out-of-service"
                }
                if root.out.ietf.dsx1LineStatus.bitwise_and(32768) == 32768 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "DS2 payload AIS"
                }
                if root.out.ietf.dsx1LineStatus.bitwise_and(65536) == 65536 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "DS2 performance threshold exceeded"
                }

                root.out.object.name = "DS1-MIB::dsx1ConfigEntry"
                root.out.object.index = this.trap.VarBinds.index(0).OID.snmp_oid_get_index(".1.3.6.1.2.1.10.18.6.1.10")
                root.out.object.entity = this.trap.AgentAddress.string() + "_" + root.out.object.name + "." + root.out.object.index
                root.out.object.label = "interface: dsx1LineIndex " + root.out.object.index

                root.out.event.class.name = "SNMPTRAP-DS1-MIB-ds1Traps-dsx1LineStatusChange"
                root.out.event.id = "SNMPTRAP-DS1-MIB-ds1Traps-dsx1LineStatusChange"
                root.out.event.category.name = "DS1/E1 line state"

            - switch:
              - check: metadata("dsx1LineStatus") < 2
                processors:
                  - mapping: |-
                      #!blobl
                      root = this

                      root.out.event.id = root.out.event.id + "-ok"
                      root.out.event.message = "DS1/E1 line OK: " + root.TEMP.alarms
                      root.out.event.severity.code = 6
                      root.out.event.severity.level = "Informational"

              - processors:
                - mapping: |-
                    #!blobl
                    root = this

                    root.out.event.id = root.out.event.id + "-alarm"
                    root.out.event.message = "DS1/E1 line alarm: " + root.TEMP.alarms
                    root.out.event.severity.code = 3
                    root.out.event.severity.level = "Error"

            - mapping: |-
                #!blobl
                root = this

                root.out.event.message = if root.out.exists("object.label") {
                  root.out.event.message + "  [ " + root.out.object.label + " ]"
                }

        - processors:
          - mapping: |-
              #!blobl
              root = this

              if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
                root.out.snmptrap.varbind.oid_0 = this.trap.VarBinds.index(0).OID
                root.out.snmptrap.varbind.type_0 = this.trap.VarBinds.index(0).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(0).Type == 4 || this.trap.VarBinds.index(0).Type == 68 {
                  root.out.snmptrap.varbind.value_0 = this.trap.VarBinds.index(0).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_0 = this.trap.VarBinds.index(0).Value.string()
                }
              if this.trap.VarBinds.length() > 1 {
                root.out.snmptrap.varbind.oid_1 = this.trap.VarBinds.index(1).OID
                root.out.snmptrap.varbind.type_1 = this.trap.VarBinds.index(1).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(1).Type == 4 || this.trap.VarBinds.index(1).Type == 68 {
                  root.out.snmptrap.varbind.value_1 = this.trap.VarBinds.index(1).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_1 = this.trap.VarBinds.index(1).Value.string()
                }
              if this.trap.VarBinds.length() > 2 {
                root.out.snmptrap.varbind.oid_2 = this.trap.VarBinds.index(2).OID
                root.out.snmptrap.varbind.type_2 = this.trap.VarBinds.index(2).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(2).Type == 4 || this.trap.VarBinds.index(2).Type == 68 {
                  root.out.snmptrap.varbind.value_2 = this.trap.VarBinds.index(2).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_2 = this.trap.VarBinds.index(2).Value.string()
                }
              if this.trap.VarBinds.length() > 3 {
                root.out.snmptrap.varbind.oid_3 = this.trap.VarBinds.index(3).OID
                root.out.snmptrap.varbind.type_3 = this.trap.VarBinds.index(3).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(3).Type == 4 || this.trap.VarBinds.index(3).Type == 68 {
                  root.out.snmptrap.varbind.value_3 = this.trap.VarBinds.index(3).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_3 = this.trap.VarBinds.index(3).Value.string()
                }
              if this.trap.VarBinds.length() > 4 {
                root.out.snmptrap.varbind.oid_4 = this.trap.VarBinds.index(4).OID
                root.out.snmptrap.varbind.type_4 = this.trap.VarBinds.index(4).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(4).Type == 4 || this.trap.VarBinds.index(4).Type == 68 {
                  root.out.snmptrap.varbind.value_4 = this.trap.VarBinds.index(4).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_4 = this.trap.VarBinds.index(4).Value.string()
                }
              }}}}}

              root.out.event.class.name = "SNMPTRAP-DS1-MIB-ds1Traps-dsx1LineStatusChange"
              root.out.event.id = "SNMPTRAP-DS1-MIB-ds1Traps-dsx1LineStatusChange-unknown"
              root.out.event.category.name = "DS1/E1 line state"
              root.out.event.message = "DS1/E1 line state change - UNEXPECTED VARBINDS for dsx1LineStatusChange trap!"
              root.out.event.severity.code = 4
              root.out.event.severity.level = "Warning"

  - processors:
    - label: default
      mapping: |
        #!blobl
        root = this

        if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
          root.out.snmptrap.varbind.oid_0 = this.trap.VarBinds.index(0).OID
          root.out.snmptrap.varbind.type_0 = this.trap.VarBinds.index(0).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(0).Type == 4 || this.trap.VarBinds.index(0).Type == 68 {
            root.out.snmptrap.varbind.value_0 = this.trap.VarBinds.index(0).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_0 = this.trap.VarBinds.index(0).Value.string()
          }
        if this.trap.VarBinds.length() > 1 {
          root.out.snmptrap.varbind.oid_1 = this.trap.VarBinds.index(1).OID
          root.out.snmptrap.varbind.type_1 = this.trap.VarBinds.index(1).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(1).Type == 4 || this.trap.VarBinds.index(1).Type == 68 {
            root.out.snmptrap.varbind.value_1 = this.trap.VarBinds.index(1).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_1 = this.trap.VarBinds.index(1).Value.string()
          }
        if this.trap.VarBinds.length() > 2 {
          root.out.snmptrap.varbind.oid_2 = this.trap.VarBinds.index(2).OID
          root.out.snmptrap.varbind.type_2 = this.trap.VarBinds.index(2).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(2).Type == 4 || this.trap.VarBinds.index(2).Type == 68 {
            root.out.snmptrap.varbind.value_2 = this.trap.VarBinds.index(2).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_2 = this.trap.VarBinds.index(2).Value.string()
          }
        if this.trap.VarBinds.length() > 3 {
          root.out.snmptrap.varbind.oid_3 = this.trap.VarBinds.index(3).OID
          root.out.snmptrap.varbind.type_3 = this.trap.VarBinds.index(3).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(3).Type == 4 || this.trap.VarBinds.index(3).Type == 68 {
            root.out.snmptrap.varbind.value_3 = this.trap.VarBinds.index(3).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_3 = this.trap.VarBinds.index(3).Value.string()
          }
        if this.trap.VarBinds.length() > 4 {
          root.out.snmptrap.varbind.oid_4 = this.trap.VarBinds.index(4).OID
          root.out.snmptrap.varbind.type_4 = this.trap.VarBinds.index(4).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(4).Type == 4 || this.trap.VarBinds.index(4).Type == 68 {
            root.out.snmptrap.varbind.value_4 = this.trap.VarBinds.index(4).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_4 = this.trap.VarBinds.index(4).Value.string()
          }
        if this.trap.VarBinds.length() > 5 {
          root.out.snmptrap.varbind.oid_5 = this.trap.VarBinds.index(5).OID
          root.out.snmptrap.varbind.type_5 = this.trap.VarBinds.index(5).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(5).Type == 4 || this.trap.VarBinds.index(5).Type == 68 {
            root.out.snmptrap.varbind.value_5 = this.trap.VarBinds.index(5).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_5 = this.trap.VarBinds.index(5).Value.string()
          }
        if this.trap.VarBinds.length() > 6 {
          root.out.snmptrap.varbind.oid_6 = this.trap.VarBinds.index(6).OID
          root.out.snmptrap.varbind.type_6 = this.trap.VarBinds.index(6).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(6).Type == 4 || this.trap.VarBinds.index(6).Type == 68 {
            root.out.snmptrap.varbind.value_6 = this.trap.VarBinds.index(6).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_6 = this.trap.VarBinds.index(6).Value.string()
          }
        if this.trap.VarBinds.length() > 7 {
          root.out.snmptrap.varbind.oid_7 = this.trap.VarBinds.index(7).OID
          root.out.snmptrap.varbind.type_7 = this.trap.VarBinds.index(7).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(7).Type == 4 || this.trap.VarBinds.index(7).Type == 68 {
            root.out.snmptrap.varbind.value_7 = this.trap.VarBinds.index(7).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_7 = this.trap.VarBinds.index(7).Value.string()
          }
        }}}}}}}}

        root.out.event.class.name = "SNMPTRAP-DS1-MIB-ds1Traps-unknown"
        root.out.event.id = "SNMPTRAP-DS1-MIB-ds1Traps-" + this.trap.SpecificTrap.string()
        root.out.event.category.name = "unknown specific trap"
        root.out.event.message = "unknown specific trap " + this.trap.SpecificTrap.string() + " from IETF DS1-MIB-ds1Traps"
        root.out.event.severity.code = 4
        root.out.event.severity.level = "Warning"
