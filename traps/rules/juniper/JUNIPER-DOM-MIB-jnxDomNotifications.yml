- mapping: |-
    #!blobl
    root = this
    root.out.origin.agent.name = "Juniper JUNIPER-DOM-MIB"
- switch:
  - check: this.trap.SpecificTrap == 1
    # jnxDomAlarmSet
    #
    # Notification of a recently set Dom alarm.
    #
    # ifDescr (DisplayString) - A textual string containing information about the interface.
    # jnxDomLastAlarms (BITS) - This object identifies a copy of jnxDomCurrentAlarms before last set or clear.
    # jnxDomCurrentAlarms (BITS) - The active DOM alarms on a SFF physical interface on this router.
    # jnxDomCurrentAlarmDate (DateAndTime) - The system date and time when the management subsystem learned of the
    #   current alarm event.
    processors:
      - mapping: |-
          #!blobl
          root = this

          meta varbinds_ok = false
          if this.trap.VarBinds.length() > 3 {
            if this.trap.VarBinds.index(0).OID.has_prefix(".1.3.6.1.2.1.2.2.1.2") {
            if this.trap.VarBinds.index(1).OID.has_prefix(".1.3.6.1.4.1.2636.3.60.1.1.1.1.3") {
            if this.trap.VarBinds.index(2).OID.has_prefix(".1.3.6.1.4.1.2636.3.60.1.1.1.1.1") {
            if this.trap.VarBinds.index(3).OID.has_prefix(".1.3.6.1.4.1.2636.3.60.1.1.1.1.2") {
              meta varbinds_ok = true
          }}}}}

      - switch:
        - check: metadata("varbinds_ok")
          processors:
            - mapping: |-
                #!blobl
                root = this

                root.out.ietf.ifDescr = this.trap.VarBinds.index(0).Value.snmp_octet_display_hint("255t")
                root.out.juniper.jnxDomLastAlarms = this.trap.VarBinds.index(1).Value
                root.out.juniper.jnxDomCurrentAlarms = this.trap.VarBinds.index(2).Value
                root.out.juniper.jnxDomCurrentAlarmDate = this.trap.VarBinds.index(3).Value.snmp_date_and_time().ts_unix_milli()

                root.TEMP.alarms = ""
                if root.out.juniper.jnxDomCurrentAlarms.bitwise_and(1) == 1 && root.out.juniper.jnxDomLastAlarms.bitwise_and(1) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "receive loss-of-signal"
                }
                if root.out.juniper.jnxDomCurrentAlarms.bitwise_and(2) == 2 && root.out.juniper.jnxDomLastAlarms.bitwise_and(2) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "receive CDR loss-of-lock"
                }
                if root.out.juniper.jnxDomCurrentAlarms.bitwise_and(4) == 4 && root.out.juniper.jnxDomLastAlarms.bitwise_and(4) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "receive not ready"
                }
                if root.out.juniper.jnxDomCurrentAlarms.bitwise_and(8) == 8 && root.out.juniper.jnxDomLastAlarms.bitwise_and(8) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "receive laser power high"
                }
                if root.out.juniper.jnxDomCurrentAlarms.bitwise_and(16) == 16 && root.out.juniper.jnxDomLastAlarms.bitwise_and(16) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "receive laser power low"
                }
                if root.out.juniper.jnxDomCurrentAlarms.bitwise_and(32) == 32 && root.out.juniper.jnxDomLastAlarms.bitwise_and(32) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "transmit laser bias current high"
                }
                if root.out.juniper.jnxDomCurrentAlarms.bitwise_and(64) == 64 && root.out.juniper.jnxDomLastAlarms.bitwise_and(64) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "transmit laser bias current low"
                }
                if root.out.juniper.jnxDomCurrentAlarms.bitwise_and(128) == 128 && root.out.juniper.jnxDomLastAlarms.bitwise_and(128) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "transmit laser power high"
                }
                if root.out.juniper.jnxDomCurrentAlarms.bitwise_and(256) == 256 && root.out.juniper.jnxDomLastAlarms.bitwise_and(256) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "transmit laser power low"
                }
                if root.out.juniper.jnxDomCurrentAlarms.bitwise_and(512) == 512 && root.out.juniper.jnxDomLastAlarms.bitwise_and(512) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "transmit data not ready"
                }
                if root.out.juniper.jnxDomCurrentAlarms.bitwise_and(1024) == 1024 && root.out.juniper.jnxDomLastAlarms.bitwise_and(1024) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "transmit not ready"
                }
                if root.out.juniper.jnxDomCurrentAlarms.bitwise_and(2048) == 2048 && root.out.juniper.jnxDomLastAlarms.bitwise_and(2048) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "transmit laser fault"
                }
                if root.out.juniper.jnxDomCurrentAlarms.bitwise_and(4096) == 4096 && root.out.juniper.jnxDomLastAlarms.bitwise_and(4096) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "transmit CDR loss-of-lock"
                }
                if root.out.juniper.jnxDomCurrentAlarms.bitwise_and(8192) == 8192 && root.out.juniper.jnxDomLastAlarms.bitwise_and(8192) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "module temperature high"
                }
                if root.out.juniper.jnxDomCurrentAlarms.bitwise_and(16384) == 16384 && root.out.juniper.jnxDomLastAlarms.bitwise_and(16384) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "module temperature low"
                }
                if root.out.juniper.jnxDomCurrentAlarms.bitwise_and(32768) == 32768 && root.out.juniper.jnxDomLastAlarms.bitwise_and(32768) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "module not ready"
                }
                if root.out.juniper.jnxDomCurrentAlarms.bitwise_and(65536) == 65536 && root.out.juniper.jnxDomLastAlarms.bitwise_and(65536) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "module powered down"
                }
                if root.out.juniper.jnxDomCurrentAlarms.bitwise_and(131072) == 131072 && root.out.juniper.jnxDomLastAlarms.bitwise_and(131072) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "link down"
                }
                if root.out.juniper.jnxDomCurrentAlarms.bitwise_and(262144) == 262144 && root.out.juniper.jnxDomLastAlarms.bitwise_and(262144) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "module removed"
                }
                if root.out.juniper.jnxDomCurrentAlarms.bitwise_and(524288) == 524288 && root.out.juniper.jnxDomLastAlarms.bitwise_and(524288) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "module temperature high"
                }
                if root.out.juniper.jnxDomCurrentAlarms.bitwise_and(1048576) == 1048576 && root.out.juniper.jnxDomLastAlarms.bitwise_and(1048576) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "module temperature low"
                }

                root.out.object.name = "JUNIPER-DOM-MIB::jnxDomCurrentEntry"
                root.out.object.index = this.trap.VarBinds.index(0).OID.snmp_oid_get_index(".1.3.6.1.2.1.2.2.1.2")
                root.out.object.entity = this.trap.AgentAddress.string() + "_" + root.out.object.name + "." + root.out.object.index
                root.out.object.label = "interface: " + root.out.ietf.ifDescr

                root.out.event.class.name = "SNMPTRAP-JUNIPER-DOM-MIB-jnxDomNotifications-jnxDomAlarmSet"
                root.out.event.id = "SNMPTRAP-JUNIPER-DOM-MIB-jnxDomNotifications-jnxDomAlarmSet"
                root.out.event.category.name = "DOM state"
                root.out.event.message = "DOM alarm"
                if root.TEMP.alarms.length() > 0 {
                  root.out.event.message = root.out.event.message + ": " + root.TEMP.alarms
                }
                root.out.event.severity.code = 2
                root.out.event.severity.level = "Alert"

            - mapping: |-
                #!blobl
                root = this

                root.out.event.message = if root.out.exists("object.label") {
                  root.out.event.message + "  [ " + root.out.object.label + " ]"
                }

        - processors:
          - mapping: |-
              #!blobl
              root = this

              if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
                root.out.snmptrap.varbind.oid_0 = this.trap.VarBinds.index(0).OID
                root.out.snmptrap.varbind.type_0 = this.trap.VarBinds.index(0).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(0).Type == 4 || this.trap.VarBinds.index(0).Type == 68 {
                  root.out.snmptrap.varbind.value_0 = this.trap.VarBinds.index(0).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_0 = this.trap.VarBinds.index(0).Value.string()
                }
              if this.trap.VarBinds.length() > 1 {
                root.out.snmptrap.varbind.oid_1 = this.trap.VarBinds.index(1).OID
                root.out.snmptrap.varbind.type_1 = this.trap.VarBinds.index(1).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(1).Type == 4 || this.trap.VarBinds.index(1).Type == 68 {
                  root.out.snmptrap.varbind.value_1 = this.trap.VarBinds.index(1).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_1 = this.trap.VarBinds.index(1).Value.string()
                }
              if this.trap.VarBinds.length() > 2 {
                root.out.snmptrap.varbind.oid_2 = this.trap.VarBinds.index(2).OID
                root.out.snmptrap.varbind.type_2 = this.trap.VarBinds.index(2).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(2).Type == 4 || this.trap.VarBinds.index(2).Type == 68 {
                  root.out.snmptrap.varbind.value_2 = this.trap.VarBinds.index(2).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_2 = this.trap.VarBinds.index(2).Value.string()
                }
              if this.trap.VarBinds.length() > 3 {
                root.out.snmptrap.varbind.oid_3 = this.trap.VarBinds.index(3).OID
                root.out.snmptrap.varbind.type_3 = this.trap.VarBinds.index(3).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(3).Type == 4 || this.trap.VarBinds.index(3).Type == 68 {
                  root.out.snmptrap.varbind.value_3 = this.trap.VarBinds.index(3).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_3 = this.trap.VarBinds.index(3).Value.string()
                }
              if this.trap.VarBinds.length() > 4 {
                root.out.snmptrap.varbind.oid_4 = this.trap.VarBinds.index(4).OID
                root.out.snmptrap.varbind.type_4 = this.trap.VarBinds.index(4).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(4).Type == 4 || this.trap.VarBinds.index(4).Type == 68 {
                  root.out.snmptrap.varbind.value_4 = this.trap.VarBinds.index(4).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_4 = this.trap.VarBinds.index(4).Value.string()
                }
              if this.trap.VarBinds.length() > 5 {
                root.out.snmptrap.varbind.oid_5 = this.trap.VarBinds.index(5).OID
                root.out.snmptrap.varbind.type_5 = this.trap.VarBinds.index(5).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(5).Type == 4 || this.trap.VarBinds.index(5).Type == 68 {
                  root.out.snmptrap.varbind.value_5 = this.trap.VarBinds.index(5).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_5 = this.trap.VarBinds.index(5).Value.string()
                }
              if this.trap.VarBinds.length() > 6 {
                root.out.snmptrap.varbind.oid_6 = this.trap.VarBinds.index(6).OID
                root.out.snmptrap.varbind.type_6 = this.trap.VarBinds.index(6).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(6).Type == 4 || this.trap.VarBinds.index(6).Type == 68 {
                  root.out.snmptrap.varbind.value_6 = this.trap.VarBinds.index(6).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_6 = this.trap.VarBinds.index(6).Value.string()
                }
              if this.trap.VarBinds.length() > 7 {
                root.out.snmptrap.varbind.oid_7 = this.trap.VarBinds.index(7).OID
                root.out.snmptrap.varbind.type_7 = this.trap.VarBinds.index(7).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(7).Type == 4 || this.trap.VarBinds.index(7).Type == 68 {
                  root.out.snmptrap.varbind.value_7 = this.trap.VarBinds.index(7).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_7 = this.trap.VarBinds.index(7).Value.string()
                }
              if this.trap.VarBinds.length() > 8 {
                root.out.snmptrap.varbind.oid_8 = this.trap.VarBinds.index(8).OID
                root.out.snmptrap.varbind.type_8 = this.trap.VarBinds.index(8).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(8).Type == 4 || this.trap.VarBinds.index(8).Type == 68 {
                  root.out.snmptrap.varbind.value_8 = this.trap.VarBinds.index(8).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_8 = this.trap.VarBinds.index(8).Value.string()
                }
              if this.trap.VarBinds.length() > 9 {
                root.out.snmptrap.varbind.oid_9 = this.trap.VarBinds.index(9).OID
                root.out.snmptrap.varbind.type_9 = this.trap.VarBinds.index(9).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(9).Type == 4 || this.trap.VarBinds.index(9).Type == 68 {
                  root.out.snmptrap.varbind.value_9 = this.trap.VarBinds.index(9).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_9 = this.trap.VarBinds.index(9).Value.string()
                }
              }}}}}}}}}}

              root.out.event.class.name = "SNMPTRAP-JUNIPER-DOM-MIB-jnxDomNotifications-jnxDomAlarmSet"
              root.out.event.id = "SNMPTRAP-JUNIPER-DOM-MIB-jnxDomNotifications-jnxDomAlarmSet-unknown"
              root.out.event.category.name = "DOM state"
              root.out.event.message = "DOM alarm set - UNEXPECTED VARBINDS for jnxDomAlarmSet trap!"
              root.out.event.severity.code = 3
              root.out.event.severity.level = "Error"

  - check: this.trap.SpecificTrap == 2
    # jnxDomAlarmCleared
    #
    # Notification of a recently cleared Dom alarm.
    #
    # ifDescr (DisplayString) - A textual string containing information about the interface.
    # jnxDomLastAlarms (BITS) - This object identifies a copy of jnxDomCurrentAlarms before last set or clear.
    # jnxDomCurrentAlarms (BITS) - The active DOM alarms on a SFF physical interface on this router.
    # jnxDomCurrentAlarmDate (DateAndTime) - The system date and time when the management subsystem learned of the
    #   current alarm event.
    processors:
      - mapping: |-
          #!blobl
          root = this

          meta varbinds_ok = false
          if this.trap.VarBinds.length() > 3 {
            if this.trap.VarBinds.index(0).OID.has_prefix(".1.3.6.1.2.1.2.2.1.2") {
            if this.trap.VarBinds.index(1).OID.has_prefix(".1.3.6.1.4.1.2636.3.60.1.1.1.1.3") {
            if this.trap.VarBinds.index(2).OID.has_prefix(".1.3.6.1.4.1.2636.3.60.1.1.1.1.1") {
            if this.trap.VarBinds.index(3).OID.has_prefix(".1.3.6.1.4.1.2636.3.60.1.1.1.1.2") {
              meta varbinds_ok = true
          }}}}}

      - switch:
        - check: metadata("varbinds_ok")
          processors:
            - mapping: |-
                #!blobl
                root = this

                root.out.ietf.ifDescr = this.trap.VarBinds.index(0).Value.snmp_octet_display_hint("255t")
                root.out.juniper.jnxDomLastAlarms = this.trap.VarBinds.index(1).Value
                root.out.juniper.jnxDomCurrentAlarms = this.trap.VarBinds.index(2).Value
                root.out.juniper.jnxDomCurrentAlarmDate = this.trap.VarBinds.index(3).Value.snmp_date_and_time().ts_unix_milli()

                root.TEMP.alarms = ""
                if root.out.juniper.jnxDomLastAlarms.bitwise_and(1) == 1 && root.out.juniper.jnxDomCurrentAlarms.bitwise_and(1) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "receive loss-of-signal"
                }
                if root.out.juniper.jnxDomLastAlarms.bitwise_and(2) == 2 && root.out.juniper.jnxDomCurrentAlarms.bitwise_and(2) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "receive CDR loss-of-lock"
                }
                if root.out.juniper.jnxDomLastAlarms.bitwise_and(4) == 4 && root.out.juniper.jnxDomCurrentAlarms.bitwise_and(4) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "receive not ready"
                }
                if root.out.juniper.jnxDomLastAlarms.bitwise_and(8) == 8 && root.out.juniper.jnxDomCurrentAlarms.bitwise_and(8) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "receive laser power high"
                }
                if root.out.juniper.jnxDomLastAlarms.bitwise_and(16) == 16 && root.out.juniper.jnxDomCurrentAlarms.bitwise_and(16) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "receive laser power low"
                }
                if root.out.juniper.jnxDomLastAlarms.bitwise_and(32) == 32 && root.out.juniper.jnxDomCurrentAlarms.bitwise_and(32) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "transmit laser bias current high"
                }
                if root.out.juniper.jnxDomLastAlarms.bitwise_and(64) == 64 && root.out.juniper.jnxDomCurrentAlarms.bitwise_and(64) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "transmit laser bias current low"
                }
                if root.out.juniper.jnxDomLastAlarms.bitwise_and(128) == 128 && root.out.juniper.jnxDomCurrentAlarms.bitwise_and(128) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "transmit laser power high"
                }
                if root.out.juniper.jnxDomLastAlarms.bitwise_and(256) == 256 && root.out.juniper.jnxDomCurrentAlarms.bitwise_and(256) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "transmit laser power low"
                }
                if root.out.juniper.jnxDomLastAlarms.bitwise_and(512) == 512 && root.out.juniper.jnxDomCurrentAlarms.bitwise_and(512) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "transmit data not ready"
                }
                if root.out.juniper.jnxDomLastAlarms.bitwise_and(1024) == 1024 && root.out.juniper.jnxDomCurrentAlarms.bitwise_and(1024) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "transmit not ready"
                }
                if root.out.juniper.jnxDomLastAlarms.bitwise_and(2048) == 2048 && root.out.juniper.jnxDomCurrentAlarms.bitwise_and(2048) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "transmit laser fault"
                }
                if root.out.juniper.jnxDomLastAlarms.bitwise_and(4096) == 4096 && root.out.juniper.jnxDomCurrentAlarms.bitwise_and(4096) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "transmit CDR loss-of-lock"
                }
                if root.out.juniper.jnxDomLastAlarms.bitwise_and(8192) == 8192 && root.out.juniper.jnxDomCurrentAlarms.bitwise_and(8192) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "module temperature high"
                }
                if root.out.juniper.jnxDomLastAlarms.bitwise_and(16384) == 16384 && root.out.juniper.jnxDomCurrentAlarms.bitwise_and(16384) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "module temperature low"
                }
                if root.out.juniper.jnxDomLastAlarms.bitwise_and(32768) == 32768 && root.out.juniper.jnxDomCurrentAlarms.bitwise_and(32768) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "module not ready"
                }
                if root.out.juniper.jnxDomLastAlarms.bitwise_and(65536) == 65536 && root.out.juniper.jnxDomCurrentAlarms.bitwise_and(65536) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "module powered down"
                }
                if root.out.juniper.jnxDomLastAlarms.bitwise_and(131072) == 131072 && root.out.juniper.jnxDomCurrentAlarms.bitwise_and(131072) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "link down"
                }
                if root.out.juniper.jnxDomLastAlarms.bitwise_and(262144) == 262144 && root.out.juniper.jnxDomCurrentAlarms.bitwise_and(262144) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "module removed"
                }
                if root.out.juniper.jnxDomLastAlarms.bitwise_and(524288) == 524288 && root.out.juniper.jnxDomCurrentAlarms.bitwise_and(524288) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "module temperature high"
                }
                if root.out.juniper.jnxDomLastAlarms.bitwise_and(1048576) == 1048576 && root.out.juniper.jnxDomCurrentAlarms.bitwise_and(1048576) == 0 {
                  if root.TEMP.alarms.length() > 0 {
                    root.TEMP.alarms = root.TEMP.alarms + ", "
                  }
                  root.TEMP.alarms = root.TEMP.alarms + "module temperature low"
                }

                root.out.object.name = "JUNIPER-DOM-MIB::jnxDomCurrentEntry"
                root.out.object.index = this.trap.VarBinds.index(0).OID.snmp_oid_get_index(".1.3.6.1.2.1.2.2.1.2")
                root.out.object.entity = this.trap.AgentAddress.string() + "_" + root.out.object.name + "." + root.out.object.index
                root.out.object.label = "interface: " + root.out.ietf.ifDescr

                root.out.event.class.name = "SNMPTRAP-JUNIPER-DOM-MIB-jnxDomNotifications-jnxDomAlarmCleared"
                root.out.event.id = "SNMPTRAP-JUNIPER-DOM-MIB-jnxDomNotifications-jnxDomAlarmCleared"
                root.out.event.category.name = "DOM state"
                root.out.event.message = "DOM alarm cleared"
                if root.TEMP.alarms.length() > 0 {
                  root.out.event.message = root.out.event.message + ": " + root.TEMP.alarms
                }
                root.out.event.severity.code = 6
                root.out.event.severity.level = "Informational"

            - mapping: |-
                #!blobl
                root = this

                root.out.event.message = if root.out.exists("object.label") {
                  root.out.event.message + "  [ " + root.out.object.label + " ]"
                }

        - processors:
          - mapping: |-
              #!blobl
              root = this

              if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
                root.out.snmptrap.varbind.oid_0 = this.trap.VarBinds.index(0).OID
                root.out.snmptrap.varbind.type_0 = this.trap.VarBinds.index(0).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(0).Type == 4 || this.trap.VarBinds.index(0).Type == 68 {
                  root.out.snmptrap.varbind.value_0 = this.trap.VarBinds.index(0).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_0 = this.trap.VarBinds.index(0).Value.string()
                }
              if this.trap.VarBinds.length() > 1 {
                root.out.snmptrap.varbind.oid_1 = this.trap.VarBinds.index(1).OID
                root.out.snmptrap.varbind.type_1 = this.trap.VarBinds.index(1).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(1).Type == 4 || this.trap.VarBinds.index(1).Type == 68 {
                  root.out.snmptrap.varbind.value_1 = this.trap.VarBinds.index(1).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_1 = this.trap.VarBinds.index(1).Value.string()
                }
              if this.trap.VarBinds.length() > 2 {
                root.out.snmptrap.varbind.oid_2 = this.trap.VarBinds.index(2).OID
                root.out.snmptrap.varbind.type_2 = this.trap.VarBinds.index(2).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(2).Type == 4 || this.trap.VarBinds.index(2).Type == 68 {
                  root.out.snmptrap.varbind.value_2 = this.trap.VarBinds.index(2).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_2 = this.trap.VarBinds.index(2).Value.string()
                }
              if this.trap.VarBinds.length() > 3 {
                root.out.snmptrap.varbind.oid_3 = this.trap.VarBinds.index(3).OID
                root.out.snmptrap.varbind.type_3 = this.trap.VarBinds.index(3).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(3).Type == 4 || this.trap.VarBinds.index(3).Type == 68 {
                  root.out.snmptrap.varbind.value_3 = this.trap.VarBinds.index(3).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_3 = this.trap.VarBinds.index(3).Value.string()
                }
              if this.trap.VarBinds.length() > 4 {
                root.out.snmptrap.varbind.oid_4 = this.trap.VarBinds.index(4).OID
                root.out.snmptrap.varbind.type_4 = this.trap.VarBinds.index(4).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(4).Type == 4 || this.trap.VarBinds.index(4).Type == 68 {
                  root.out.snmptrap.varbind.value_4 = this.trap.VarBinds.index(4).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_4 = this.trap.VarBinds.index(4).Value.string()
                }
              if this.trap.VarBinds.length() > 5 {
                root.out.snmptrap.varbind.oid_5 = this.trap.VarBinds.index(5).OID
                root.out.snmptrap.varbind.type_5 = this.trap.VarBinds.index(5).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(5).Type == 4 || this.trap.VarBinds.index(5).Type == 68 {
                  root.out.snmptrap.varbind.value_5 = this.trap.VarBinds.index(5).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_5 = this.trap.VarBinds.index(5).Value.string()
                }
              if this.trap.VarBinds.length() > 6 {
                root.out.snmptrap.varbind.oid_6 = this.trap.VarBinds.index(6).OID
                root.out.snmptrap.varbind.type_6 = this.trap.VarBinds.index(6).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(6).Type == 4 || this.trap.VarBinds.index(6).Type == 68 {
                  root.out.snmptrap.varbind.value_6 = this.trap.VarBinds.index(6).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_6 = this.trap.VarBinds.index(6).Value.string()
                }
              if this.trap.VarBinds.length() > 7 {
                root.out.snmptrap.varbind.oid_7 = this.trap.VarBinds.index(7).OID
                root.out.snmptrap.varbind.type_7 = this.trap.VarBinds.index(7).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(7).Type == 4 || this.trap.VarBinds.index(7).Type == 68 {
                  root.out.snmptrap.varbind.value_7 = this.trap.VarBinds.index(7).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_7 = this.trap.VarBinds.index(7).Value.string()
                }
              if this.trap.VarBinds.length() > 8 {
                root.out.snmptrap.varbind.oid_8 = this.trap.VarBinds.index(8).OID
                root.out.snmptrap.varbind.type_8 = this.trap.VarBinds.index(8).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(8).Type == 4 || this.trap.VarBinds.index(8).Type == 68 {
                  root.out.snmptrap.varbind.value_8 = this.trap.VarBinds.index(8).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_8 = this.trap.VarBinds.index(8).Value.string()
                }
              if this.trap.VarBinds.length() > 9 {
                root.out.snmptrap.varbind.oid_9 = this.trap.VarBinds.index(9).OID
                root.out.snmptrap.varbind.type_9 = this.trap.VarBinds.index(9).Type.snmp_int_enum_enrich(".1_SnmpTypes")
                if this.trap.VarBinds.index(9).Type == 4 || this.trap.VarBinds.index(9).Type == 68 {
                  root.out.snmptrap.varbind.value_9 = this.trap.VarBinds.index(9).Value.snmp_octet_string()
                } else {
                  root.out.snmptrap.varbind.value_9 = this.trap.VarBinds.index(9).Value.string()
                }
              }}}}}}}}}}

              root.out.event.class.name = "SNMPTRAP-JUNIPER-DOM-MIB-jnxDomNotifications-jnxDomAlarmCleared"
              root.out.event.id = "SNMPTRAP-JUNIPER-DOM-MIB-jnxDomNotifications-jnxDomAlarmCleared-unknown"
              root.out.event.category.name = "DOM state"
              root.out.event.message = "DOM alarm cleared - UNEXPECTED VARBINDS for jnxDomAlarmCleared trap!"
              root.out.event.severity.code = 5
              root.out.event.severity.level = "Notice"

  - processors:
    - label: default
      mapping: |
        #!blobl
        root = this

        if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
          root.out.snmptrap.varbind.oid_0 = this.trap.VarBinds.index(0).OID
          root.out.snmptrap.varbind.type_0 = this.trap.VarBinds.index(0).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(0).Type == 4 || this.trap.VarBinds.index(0).Type == 68 {
            root.out.snmptrap.varbind.value_0 = this.trap.VarBinds.index(0).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_0 = this.trap.VarBinds.index(0).Value.string()
          }
        if this.trap.VarBinds.length() > 1 {
          root.out.snmptrap.varbind.oid_1 = this.trap.VarBinds.index(1).OID
          root.out.snmptrap.varbind.type_1 = this.trap.VarBinds.index(1).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(1).Type == 4 || this.trap.VarBinds.index(1).Type == 68 {
            root.out.snmptrap.varbind.value_1 = this.trap.VarBinds.index(1).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_1 = this.trap.VarBinds.index(1).Value.string()
          }
        if this.trap.VarBinds.length() > 2 {
          root.out.snmptrap.varbind.oid_2 = this.trap.VarBinds.index(2).OID
          root.out.snmptrap.varbind.type_2 = this.trap.VarBinds.index(2).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(2).Type == 4 || this.trap.VarBinds.index(2).Type == 68 {
            root.out.snmptrap.varbind.value_2 = this.trap.VarBinds.index(2).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_2 = this.trap.VarBinds.index(2).Value.string()
          }
        if this.trap.VarBinds.length() > 3 {
          root.out.snmptrap.varbind.oid_3 = this.trap.VarBinds.index(3).OID
          root.out.snmptrap.varbind.type_3 = this.trap.VarBinds.index(3).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(3).Type == 4 || this.trap.VarBinds.index(3).Type == 68 {
            root.out.snmptrap.varbind.value_3 = this.trap.VarBinds.index(3).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_3 = this.trap.VarBinds.index(3).Value.string()
          }
        if this.trap.VarBinds.length() > 4 {
          root.out.snmptrap.varbind.oid_4 = this.trap.VarBinds.index(4).OID
          root.out.snmptrap.varbind.type_4 = this.trap.VarBinds.index(4).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(4).Type == 4 || this.trap.VarBinds.index(4).Type == 68 {
            root.out.snmptrap.varbind.value_4 = this.trap.VarBinds.index(4).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_4 = this.trap.VarBinds.index(4).Value.string()
          }
        if this.trap.VarBinds.length() > 5 {
          root.out.snmptrap.varbind.oid_5 = this.trap.VarBinds.index(5).OID
          root.out.snmptrap.varbind.type_5 = this.trap.VarBinds.index(5).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(5).Type == 4 || this.trap.VarBinds.index(5).Type == 68 {
            root.out.snmptrap.varbind.value_5 = this.trap.VarBinds.index(5).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_5 = this.trap.VarBinds.index(5).Value.string()
          }
        if this.trap.VarBinds.length() > 6 {
          root.out.snmptrap.varbind.oid_6 = this.trap.VarBinds.index(6).OID
          root.out.snmptrap.varbind.type_6 = this.trap.VarBinds.index(6).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(6).Type == 4 || this.trap.VarBinds.index(6).Type == 68 {
            root.out.snmptrap.varbind.value_6 = this.trap.VarBinds.index(6).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_6 = this.trap.VarBinds.index(6).Value.string()
          }
        if this.trap.VarBinds.length() > 7 {
          root.out.snmptrap.varbind.oid_7 = this.trap.VarBinds.index(7).OID
          root.out.snmptrap.varbind.type_7 = this.trap.VarBinds.index(7).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(7).Type == 4 || this.trap.VarBinds.index(7).Type == 68 {
            root.out.snmptrap.varbind.value_7 = this.trap.VarBinds.index(7).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_7 = this.trap.VarBinds.index(7).Value.string()
          }
        if this.trap.VarBinds.length() > 8 {
          root.out.snmptrap.varbind.oid_8 = this.trap.VarBinds.index(8).OID
          root.out.snmptrap.varbind.type_8 = this.trap.VarBinds.index(8).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(8).Type == 4 || this.trap.VarBinds.index(8).Type == 68 {
            root.out.snmptrap.varbind.value_8 = this.trap.VarBinds.index(8).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_8 = this.trap.VarBinds.index(8).Value.string()
          }
        if this.trap.VarBinds.length() > 9 {
          root.out.snmptrap.varbind.oid_9 = this.trap.VarBinds.index(9).OID
          root.out.snmptrap.varbind.type_9 = this.trap.VarBinds.index(9).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(9).Type == 4 || this.trap.VarBinds.index(9).Type == 68 {
            root.out.snmptrap.varbind.value_9 = this.trap.VarBinds.index(9).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_9 = this.trap.VarBinds.index(9).Value.string()
          }
        if this.trap.VarBinds.length() > 10 {
          root.out.snmptrap.varbind.oid_10 = this.trap.VarBinds.index(10).OID
          root.out.snmptrap.varbind.type_10 = this.trap.VarBinds.index(10).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(10).Type == 4 || this.trap.VarBinds.index(10).Type == 68 {
            root.out.snmptrap.varbind.value_10 = this.trap.VarBinds.index(10).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_10 = this.trap.VarBinds.index(10).Value.string()
          }
        if this.trap.VarBinds.length() > 11 {
          root.out.snmptrap.varbind.oid_11 = this.trap.VarBinds.index(11).OID
          root.out.snmptrap.varbind.type_11 = this.trap.VarBinds.index(11).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(11).Type == 4 || this.trap.VarBinds.index(11).Type == 68 {
            root.out.snmptrap.varbind.value_11 = this.trap.VarBinds.index(11).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_11 = this.trap.VarBinds.index(11).Value.string()
          }
        if this.trap.VarBinds.length() > 12 {
          root.out.snmptrap.varbind.oid_12 = this.trap.VarBinds.index(12).OID
          root.out.snmptrap.varbind.type_12 = this.trap.VarBinds.index(12).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(12).Type == 4 || this.trap.VarBinds.index(12).Type == 68 {
            root.out.snmptrap.varbind.value_12 = this.trap.VarBinds.index(12).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_12 = this.trap.VarBinds.index(12).Value.string()
          }
        if this.trap.VarBinds.length() > 13 {
          root.out.snmptrap.varbind.oid_13 = this.trap.VarBinds.index(13).OID
          root.out.snmptrap.varbind.type_13 = this.trap.VarBinds.index(13).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(13).Type == 4 || this.trap.VarBinds.index(13).Type == 68 {
            root.out.snmptrap.varbind.value_13 = this.trap.VarBinds.index(13).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_13 = this.trap.VarBinds.index(13).Value.string()
          }
        if this.trap.VarBinds.length() > 14 {
          root.out.snmptrap.varbind.oid_14 = this.trap.VarBinds.index(14).OID
          root.out.snmptrap.varbind.type_14 = this.trap.VarBinds.index(14).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(14).Type == 4 || this.trap.VarBinds.index(14).Type == 68 {
            root.out.snmptrap.varbind.value_14 = this.trap.VarBinds.index(14).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_14 = this.trap.VarBinds.index(14).Value.string()
          }
        if this.trap.VarBinds.length() > 15 {
          root.out.snmptrap.varbind.oid_15 = this.trap.VarBinds.index(15).OID
          root.out.snmptrap.varbind.type_15 = this.trap.VarBinds.index(15).Type.snmp_int_enum_enrich(".1_SnmpTypes")
          if this.trap.VarBinds.index(15).Type == 4 || this.trap.VarBinds.index(15).Type == 68 {
            root.out.snmptrap.varbind.value_15 = this.trap.VarBinds.index(15).Value.snmp_octet_string()
          } else {
            root.out.snmptrap.varbind.value_15 = this.trap.VarBinds.index(15).Value
          }
        }}}}}}}}}}}}}}}}

        root.out.event.class.name = "SNMPTRAP-JUNIPER-DOM-MIB-jnxDomNotifications-unknown"
        root.out.event.id = "SNMPTRAP-JUNIPER-DOM-MIB-jnxDomNotifications-" + this.trap.SpecificTrap.string()
        root.out.event.category.name = "unknown specific trap"
        root.out.event.message = "unknown specific trap " + this.trap.SpecificTrap.string() + " from Juniper JUNIPER-DOM-MIB-jnxDomNotifications"
        root.out.event.severity.code = 4
        root.out.event.severity.level = "Warning"
