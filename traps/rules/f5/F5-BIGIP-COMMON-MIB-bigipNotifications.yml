- mapping: |-
    #!blobl
    root = this
    root.out.origin.agent.name = "F5-BIGIP-COMMON-MIB"
- switch:
    - check: this.trap.SpecificTrap == 1
      # bigipAgentStart
      #
      # An indication that the agent has started running.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAgentStart"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAgentStart"
            root.out.event.category.name = "BIG-IP agent state"
            root.out.event.message = "BIG-IP agent running"
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 2
      # bigipAgentShutdown
      #
      # An indication that the agent is in the process of being shut down.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAgentShutdown"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAgentShutdown"
            root.out.event.category.name = "BIG-IP agent state"
            root.out.event.message = "BIG-IP agent shutdown"
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 3
      # bigipAgentRestart
      #
      # An indication that the agent has been restarted. (eg. It happens when a SIGHUP is received.) This does not
      # imply anything about whether the configuration has changed (unlike the standard coldStart or warmStart traps)
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAgentRestart"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAgentRestart"
            root.out.event.category.name = "BIG-IP agent state"
            root.out.event.message = "BIG-IP agent restarted"
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 4
      # bigipCpuTempHigh
      #
      # CPU temperature is too high.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipCpuTempHigh"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipCpuTempHigh"
            root.out.event.category.name = "BIG-IP CPU temperature state"
            root.out.event.message = "BIG-IP CPU temperature too high"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 5
      # bigipCpuFanSpeedLow
      #
      # CPU fan speed is too low.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipCpuFanSpeedLow"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipCpuFanSpeedLow"
            root.out.event.category.name = "BIG-IP CPU fan speed state"
            root.out.event.message = "BIG-IP CPU fan speed too low"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 6
      # bigipCpuFanSpeedBad
      #
      # CPU fan speed signal not received.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipCpuFanSpeedBad"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipCpuFanSpeedBad"
            root.out.event.category.name = "BIG-IP CPU fan speed state"
            root.out.event.message = "BIG-IP CPU fan speed signal not receieved"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 7
      # bigipChassisTempHigh
      #
      # Chassis temperature is too high.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipChassisTempHigh"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipChassisTempHigh"
            root.out.event.category.name = "BIG-IP chassis temperature state"
            root.out.event.message = "BIG-IP chassis temperature too high"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 8
      # bigipChassisFanBad
      #
      # Chassis fan status is bad.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipChassisFanBad"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipChassisFanBad"
            root.out.event.category.name = "BIG-IP chassis fan state"
            root.out.event.message = "BIG-IP chassis fan bad"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 9
      # bigipChassisPowerSupplyBad
      #
      # Chassis power supply status is bad.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipChassisPowerSupplyBad"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipChassisPowerSupplyBad"
            root.out.event.category.name = "BIG-IP chassis power supply state"
            root.out.event.message = "BIG-IP chassis power supply bad"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 10
      # bigipServiceDown
      #
      # A pool member is detected DOWN.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      # bigipNotifyObjNode (DisplayString) - The user-assigned name or IP address of the node.
      # bigipNotifyObjPort (DisplayString) - The port or service name.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjNode = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 1 {
              this.trap.VarBinds.index(1).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjPort = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 2 {
              this.trap.VarBinds.index(2).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipServiceDown"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipServiceDown"
            root.out.event.category.name = "BIG-IP pool member state"
            root.out.event.message = "BIG-IP pool member down"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 11
      # bigipServiceUp
      #
      # A pool member is detected UP.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      # bigipNotifyObjNode (DisplayString) - The user-assigned name or IP address of the node.
      # bigipNotifyObjPort (DisplayString) - The port or service name.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjNode = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 1 {
              this.trap.VarBinds.index(1).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjPort = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 2 {
              this.trap.VarBinds.index(2).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipServiceUp"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipServiceUp"
            root.out.event.category.name = "BIG-IP pool member state"
            root.out.event.message = "BIG-IP pool member up"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 12
      # bigipNodeDown
      #
      # A node is detected DOWN.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      # bigipNotifyObjNode (DisplayString) - The user-assigned name or IP address of the node.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjNode = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 1 {
              this.trap.VarBinds.index(1).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipNodeDown"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipNodeDown"
            root.out.event.category.name = "BIG-IP node state"
            root.out.event.message = "BIG-IP node down"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 13
      # bigipNodeUp
      #
      # A node is detected UP.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      # bigipNotifyObjNode (DisplayString) - The user-assigned name or IP address of the node.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjNode = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 1 {
              this.trap.VarBinds.index(1).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipNodeUp"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipNodeUp"
            root.out.event.category.name = "BIG-IP node state"
            root.out.event.message = "BIG-IP node up"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 14
      # bigipStandby
      #
      # The system is going into standby mode.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipStandby"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipStandby"
            root.out.event.category.name = "BIG-IP system active-standby state"
            root.out.event.message = "BIG-IP system going into standby mode"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 15
      # bigipActive
      #
      # The system is going into active mode.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipActive"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipActive"
            root.out.event.category.name = "BIG-IP system active-standby state"
            root.out.event.message = "BIG-IP system going into active mode"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 16
      # bigipActiveActive
      #
      # The system is going into active-active mode.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipActiveActive"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipActiveActive"
            root.out.event.category.name = "BIG-IP system active-standby state"
            root.out.event.message = "BIG-IP system going into active-active mode"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 17
      # bigipFeatureFailed
      #
      # A high availability feature triggered action failed.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipFeatureFailed"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipFeatureFailed"
            root.out.event.category.name = "BIG-IP HA state"
            root.out.event.message = "BIG-IP HA triggered action failed"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 18
      # bigipFeatureOnline
      #
      # A high availability feature is now responding.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipFeatureOnline"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipFeatureOnline"
            root.out.event.category.name = "BIG-IP HA state"
            root.out.event.message = "BIG-IP HA now responding"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 19
      # bigipLicenseFailed
      #
      # The license validation failed.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLicenseFailed"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLicenseFailed"
            root.out.event.category.name = "BIG-IP license state"
            root.out.event.message = "BIG-IP license validation failed"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 20
      # bigipLicenseExpired
      #
      # The license has expired.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLicenseExpired"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLicenseExpired"
            root.out.event.category.name = "BIG-IP license state"
            root.out.event.message = "BIG-IP license expired"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 21
      # bigipTamdAlert
      #
      # Too many authentication failures (> 60) in 1 second to TMM (Traffic Management Module).
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipTamdAlert"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipTamdAlert"
            root.out.event.category.name = "BIG-IP TMM authentication failure threshold"
            root.out.event.message = "BIG-IP too many authentication failures (> 60) in 1 second to TMM"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 22
      # bigipAggrReaperStateChange
      #
      # The aggressive reaper state changed. Aggressive reaper state changes indicate the system is moving into
      # distress-mode for DOS prevention.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAggrReaperStateChange"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAggrReaperStateChange"
            root.out.event.category.name = "BIG-IP aggressive reaper state"
            root.out.event.message = "BIG-IP aggressive reaper state changed, system moving into distress-mode for DOS prevention"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 23
      # bigipARPConflict
      #
      # There is an ARP conflict.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipARPConflict"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipARPConflict"
            root.out.event.category.name = "BIG-IP ARP status"
            root.out.event.message = "BIG-IP ARP conflict"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 24
      # bigipNetLinkDown
      #
      # An internal interface link is down. This is for L1 and L2. These are internal links within the box connecting
      # the CPU and Switch subsystems, which should never lose link. If they do, it indicates a serious problem.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipNetLinkDown"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipNetLinkDown"
            root.out.event.category.name = "BIG-IP BIG-IP internal interface link state"
            root.out.event.message = "BIG-IP internal interface link down"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 25
      # bigipDiskPartitionWarn
      #
      # The disk partition free space is very limited, which is less than a specified limit. By default, the limit is
      # set to 30% of total disk space.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipDiskPartitionWarn"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipDiskPartitionWarn"
            root.out.event.category.name = "BIG-IP disk partition free space threshold"
            root.out.event.message = "BIG-IP disk partition free space very limited"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 26
      # bigipDiskPartitionGrowth
      #
      # The disk partition exceeds the specified growth limit. By default, the limit is set to 5% of the total disk
      # space. The growth is difference of two consecutive monitoring data.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipDiskPartitionGrowth"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipDiskPartitionGrowth"
            root.out.event.category.name = "BIG-IP disk partition growth threshold"
            root.out.event.message = "BIG-IP disk partition exceeds growth limit"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 27
      # bigipAuthFailed
      #
      # The login/sshd authentication has failed.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAuthFailed"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAuthFailed"
            root.out.event.category.name = "BIG-IP login/sshd authentication state"
            root.out.event.message = "BIG-IP login/sshd authentication failed"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 28
      # bigipConfigLoaded
      #
      # Deprecated! The component which created this event has been deprecated. The configuration was loaded.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipConfigLoaded"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipConfigLoaded"
            root.out.event.category.name = "BIG-IP configuration state"
            root.out.event.message = "BIG-IP configuration loaded"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 29
      # bigipLogEmerg
      #
      # The system is in an unusable situation.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLogEmerg"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLogEmerg"
            root.out.event.category.name = "BIG-IP system state"
            root.out.event.message = "BIG-IP system unusable"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 0
            root.out.event.severity.level = "Emergency"

    - check: this.trap.SpecificTrap == 30
      # bigipLogAlert
      #
      # Action must be taken immediately for the system to work properly.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLogAlert"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLogAlert"
            root.out.event.category.name = "BIG-IP system state"
            root.out.event.message = "BIG-IP system immediate action required"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 31
      # bigipLogCrit
      #
      # The system is in a critical condition.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLogCrit"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLogCrit"
            root.out.event.category.name = "BIG-IP system state"
            root.out.event.message = "BIG-IP system critical"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 32
      # bigipLogErr
      #
      # The system has some error conditions.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLogErr"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLogErr"
            root.out.event.category.name = "BIG-IP system state"
            root.out.event.message = "BIG-IP system error"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 33
      # bigipLogWarning
      #
      # The system is experiencing some warning conditions.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLogWarning"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLogWarning"
            root.out.event.category.name = "BIG-IP system state"
            root.out.event.message = "BIG-IP system warning"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 34
      # bigipPacketRejected
      #
      # The packets are rejected.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipPacketRejected"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipPacketRejected"
            root.out.event.category.name = "BIG-IP packet status"
            root.out.event.message = "BIG-IP packets rejected"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 35
      # bigipCompLimitExceeded
      #
      # The compression license limit is exceeded.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipCompLimitExceeded"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipCompLimitExceeded"
            root.out.event.category.name = "BIG-IP compression license state"
            root.out.event.message = "BIG-IP compression license limit exceeded"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 36
      # bigipSslLimitExceeded
      #
      # The SSL license limits are exceeded, either for TPS (Transactions Per Second) or for MPS (Megabits Per Second).
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSslLimitExceeded"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSslLimitExceeded"
            root.out.event.category.name = "BIG-IP SSL license state"
            root.out.event.message = "BIG-IP SSL license limits exceeded"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 37
      # bigipExternalLinkChange
      #
      # An external interface link status changes. For a fixed port, this is an occurrence when network cables are
      # connected  or removed, and the network is reconfigured; for a pluggable port (such as a SFP or XFP port), this
      # happens when the pluggable unit is plugged in or unplugged, or when a cable is connected or removed from a
      # plugged port. The possible values are UP, DOWN, or UNPOPULATED.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipExternalLinkChange"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipExternalLinkChange"
            root.out.event.category.name = "BIG-IP external interface link state"
            root.out.event.message = "BIG-IP external interface link state changed"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 38
      # bigipAsmRequestBlocked
      #
      # The HTTP request was blocked because it issued (at least one) violation(s) which is marked as blocking at the
      # current active policy in Application Security Module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAsmRequestBlocked"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAsmRequestBlocked"
            root.out.event.category.name = "BIG-IP HTTP request state"
            root.out.event.message = "BIG-IP HTTP request policy violation, blocked"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 39
      # bigipAsmRequestViolation
      #
      # The HTTP request issued a violation to the current active policy. This violation is marked as an alerting
      # violation in that policy in Application Security Module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAsmRequestViolation"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAsmRequestViolation"
            root.out.event.category.name = "BIG-IP HTTP request state"
            root.out.event.message = "BIG-IP HTTP request policy violation"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 40
      # bigipGtmPoolAvail
      #
      # A pool is becoming available in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmPoolAvail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmPoolAvail"
            root.out.event.category.name = "BIG-IP GTM pool state"
            root.out.event.message = "BIG-IP GTM pool available"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 41
      # bigipGtmPoolNotAvail
      #
      # A pool is becoming unavailable in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmPoolNotAvail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmPoolNotAvail"
            root.out.event.category.name = "BIG-IP GTM pool state"
            root.out.event.message = "BIG-IP GTM pool unavailable"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 42
      # bigipGtmPoolDisabled
      #
      # A pool is disabled in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmPoolDisabled"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmPoolDisabled"
            root.out.event.category.name = "BIG-IP GTM pool state"
            root.out.event.message = "BIG-IP GTM pool disabled"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 43
      # bigipGtmPoolEnabled
      #
      # A pool is enabled in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmPoolEnabled"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmPoolEnabled"
            root.out.event.category.name = "BIG-IP GTM pool state"
            root.out.event.message = "BIG-IP GTM pool enabled"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 44
      # bigipGtmLinkAvail
      #
      # A link is becoming available in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmLinkAvail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmLinkAvail"
            root.out.event.category.name = "BIG-IP GTM link state"
            root.out.event.message = "BIG-IP GTM link available"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 45
      # bigipGtmLinkNotAvail
      #
      # A link is becoming unavailable in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmLinkNotAvail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmLinkNotAvail"
            root.out.event.category.name = "BIG-IP GTM link state"
            root.out.event.message = "BIG-IP GTM link unavailable"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 46
      # bigipGtmLinkDisabled
      #
      # A link is disabled in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmLinkDisabled"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmLinkDisabled"
            root.out.event.category.name = "BIG-IP GTM link state"
            root.out.event.message = "BIG-IP GTM link disabled"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 47
      # bigipGtmLinkEnabled
      #
      # A link is enabled in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmLinkEnabled"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmLinkEnabled"
            root.out.event.category.name = "BIG-IP GTM link state"
            root.out.event.message = "BIG-IP GTM link enabled"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 48
      # bigipGtmWideIpAvail
      #
      # A wide IP is becoming available in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmWideIpAvail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmWideIpAvail"
            root.out.event.category.name = "BIG-IP GTM wide IP state"
            root.out.event.message = "BIG-IP GTM wide IP available"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Unavailable"

    - check: this.trap.SpecificTrap == 49
      # bigipGtmWideIpNotAvail
      #
      # A wide IP is becoming unavailable in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmWideIpNotAvail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmWideIpNotAvail"
            root.out.event.category.name = "BIG-IP GTM wide IP state"
            root.out.event.message = "BIG-IP GTM wide IP unavailable"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 50
      # bigipGtmWideIpDisabled
      #
      # A wide IP is disabled in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmWideIpDisabled"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmWideIpDisabled"
            root.out.event.category.name = "BIG-IP GTM wide IP state"
            root.out.event.message = "BIG-IP GTM wide IP disabled"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 51
      # bigipGtmWideIpEnabled
      #
      # A wide IP is enabled in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmWideIpEnabled"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmWideIpEnabled"
            root.out.event.category.name = "BIG-IP GTM wide IP state"
            root.out.event.message = "BIG-IP GTM wide IP enabled"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 52
      # bigipGtmPoolMbrAvail
      #
      # A pool member is becoming available in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmPoolMbrAvail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmPoolMbrAvail"
            root.out.event.category.name = "BIG-IP GTM pool member state"
            root.out.event.message = "BIG-IP GTM pool member available"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 53
      # bigipGtmPoolMbrNotAvail
      #
      # A pool member is becoming unavailable in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmPoolMbrNotAvail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmPoolMbrNotAvail"
            root.out.event.category.name = "BIG-IP GTM pool member state"
            root.out.event.message = "BIG-IP GTM pool member unavailable"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 54
      # bigipGtmPoolMbrDisabled
      #
      # A pool member is disabled in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmPoolMbrDisabled"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmPoolMbrDisabled"
            root.out.event.category.name = "BIG-IP GTM pool member state"
            root.out.event.message = "BIG-IP GTM pool member disabled"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 55
      # bigipGtmPoolMbrEnabled
      #
      # A pool member is enabled in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmPoolMbrEnabled"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmPoolMbrEnabled"
            root.out.event.category.name = "BIG-IP GTM pool member state"
            root.out.event.message = "BIG-IP GTM pool member enabled"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 56
      # bigipGtmServerAvail
      #
      # A server is becoming available in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmServerAvail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmServerAvail"
            root.out.event.category.name = "BIG-IP GTM server state"
            root.out.event.message = "BIG-IP GTM server available"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 57
      # bigipGtmServerNotAvail
      #
      # A server is becoming unavailable in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmServerNotAvail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmServerNotAvail"
            root.out.event.category.name = "BIG-IP GTM server state"
            root.out.event.message = "BIG-IP GTM server unavailable"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 58
      # bigipGtmServerDisabled
      #
      # A server is disabled in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmServerDisabled"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmServerDisabled"
            root.out.event.category.name = "BIG-IP GTM server state"
            root.out.event.message = "BIG-IP GTM server disabled"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 59
      # bigipGtmServerEnabled
      #
      # A server is enabled in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmServerEnabled"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmServerEnabled"
            root.out.event.category.name = "BIG-IP GTM server state"
            root.out.event.message = "BIG-IP GTM server enabled"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 60
      # bigipGtmVsAvail
      #
      # A virtual server is becoming available in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmVsAvail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmVsAvail"
            root.out.event.category.name = "BIG-IP GTM virtual server state"
            root.out.event.message = "BIG-IP GTM virtual server available"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 61
      # bigipGtmVsNotAvail
      #
      # A virtual server is becoming unavailable in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmVsNotAvail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmVsNotAvail"
            root.out.event.category.name = "BIG-IP GTM virtual server state"
            root.out.event.message = "BIG-IP GTM virtual server unavailable"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 62
      # bigipGtmVsDisabled
      #
      # A virtual server is disabled in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmVsDisabled"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmVsDisabled"
            root.out.event.category.name = "BIG-IP GTM virtual server state"
            root.out.event.message = "BIG-IP GTM virtual server disabled"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 63
      # bigipGtmVsEnabled
      #
      # A virtual server is enabled in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmVsEnabled"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmVsEnabled"
            root.out.event.category.name = "BIG-IP GTM virtual server state"
            root.out.event.message = "BIG-IP GTM virtual server enabled"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 64
      # bigipGtmDcAvail
      #
      # A data center is becoming available in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmDcAvail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmDcAvail"
            root.out.event.category.name = "BIG-IP GTM datacenter state"
            root.out.event.message = "BIG-IP GTM datacenter available"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 65
      # bigipGtmDcNotAvail
      #
      # A data center is becoming unavailable in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmDcNotAvail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmDcNotAvail"
            root.out.event.category.name = "BIG-IP GTM datacenter state"
            root.out.event.message = "BIG-IP GTM datacenter unavailable"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 66
      # bigipGtmDcDisabled
      #
      # A data center is disabled in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmDcDisabled"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmDcDisabled"
            root.out.event.category.name = "BIG-IP GTM datacenter state"
            root.out.event.message = "BIG-IP GTM datacenter disabled"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 67
      # bigipGtmDcEnabled
      #
      # A data center is enabled in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmDcEnabled"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmDcEnabled"
            root.out.event.category.name = "BIG-IP GTM datacenter state"
            root.out.event.message = "BIG-IP GTM datacenter enabled"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 68
      # bigipHardDiskFailure
      #
      # Deprecated! This object has been eliminated. The hard disk is failing.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipHardDiskFailure"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipHardDiskFailure"
            root.out.event.category.name = "BIG-IP hard disk state"
            root.out.event.message = "BIG-IP hard disk failing"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 69
      # bigipGtmAppObjAvail
      #
      # An application object is becoming available in global management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmAppObjAvail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmAppObjAvail"
            root.out.event.category.name = "BIG-IP GTM application object state"
            root.out.event.message = "BIG-IP GTM application object available"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 70
      # bigipGtmAppObjNotAvail
      #
      # An application object is becoming unavailable in global management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmAppObjNotAvail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmAppObjNotAvail"
            root.out.event.category.name = "BIG-IP GTM application object state"
            root.out.event.message = "BIG-IP GTM application object unavailable"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 71
      # bigipGtmAppAvail
      #
      # An application is becoming available in global management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmAppAvail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmAppAvail"
            root.out.event.category.name = "BIG-IP GTM application state"
            root.out.event.message = "BIG-IP GTM application available"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 72
      # bigipGtmAppNotAvail
      #
      # An application is becoming unavailable in global management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmAppNotAvail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmAppNotAvail"
            root.out.event.category.name = "BIG-IP GTM application state"
            root.out.event.message = "BIG-IP GTM application unavailable"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 73
      # bigipGtmJoinedGroup
      #
      # BIG-IP GTM joined sync group.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmJoinedGroup"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmJoinedGroup"
            root.out.event.category.name = "BIG-IP GTM sync group state"
            root.out.event.message = "BIG-IP GTM joined sync group"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notify"

    - check: this.trap.SpecificTrap == 74
      # bigipGtmLeftGroup
      #
      # BIG-IP GTM left sync group.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmLeftGroup"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmLeftGroup"
            root.out.event.category.name = "BIG-IP GTM sync group state"
            root.out.event.message = "BIG-IP GTM left sync group"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 75
      # bigipStandByFail
      #
      # In failover condition, this standby will not be able to go active.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipStandByFail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipStandByFail"
            root.out.event.category.name = "BIG-IP standby availability state"
            root.out.event.message = "BIG-IP standby unable to go active"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 76
      # bigipInetPortExhaustion
      #
      # The TMM has run out of source ports and cannot open new communications channels with other machines.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipInetPortExhaustion"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipInetPortExhaustion"
            root.out.event.category.name = "BIG-IP GTM communications state"
            root.out.event.message = "BIG-IP GTM source ports depleted"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 77
      # bigipGtmBoxAvail
      #
      # A gtm machine (which equates to an iquery connect to a gtm machine) has gone UP
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmBoxAvail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmBoxAvail"
            root.out.event.category.name = "BIG-IP GTM machine state"
            root.out.event.message = "BIG-IP GTM machine up"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 78
      # bigipGtmBoxNotAvail
      #
      # A gtm machine (which equates to an iquery connect to a gtm machine) has gone DOWN
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmBoxNotAvail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmBoxNotAvail"
            root.out.event.category.name = "BIG-IP GTM machine state"
            root.out.event.message = "BIG-IP GTM machine down"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 79
      # bigipAsmFtpRequestBlocked
      #
      # The FTP request was blocked because it issued (at least one) violation(s) which is marked as blocking at the
      # current active policy in Application Security Module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAsmFtpRequestBlocked"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAsmFtpRequestBlocked"
            root.out.event.category.name = "BIG-IP FTP request state"
            root.out.event.message = "BIG-IP FTP request policy violation, blocked"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 80
      # bigipAsmFtpRequestViolation
      #
      # The FTP request issued a violation to the current active policy. This violation is marked as an alerting
      # violation in that policy in Application Security Module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAsmFtpRequestViolation"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAsmFtpRequestViolation"
            root.out.event.category.name = "BIG-IP FTP request state"
            root.out.event.message = "BIG-IP FTP request policy violation"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 81
      # bigipGtmBig3dSslCertExpired
      #
      # BIG-IP GTM BIG3D SSL Cert has expired.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmBig3dSslCertExpired"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmBig3dSslCertExpired"
            root.out.event.category.name = "BIG-IP GTM BIG3D SSL cert state"
            root.out.event.message = "BIG-IP GTM BIG3D SSL cert expired"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 82
      # bigipGtmBig3dSslCertWillExpire
      #
      # BIG-IP GTM BIG3D SSL Cert will expire.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmBig3dSslCertWillExpire"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmBig3dSslCertWillExpire"
            root.out.event.category.name = "BIG-IP GTM BIG3D SSL cert state"
            root.out.event.message = "BIG-IP GTM BIG3D SSL cert will expire soon"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 83
      # bigipGtmSslCertExpired
      #
      # BIG-IP GTM SSL Cert has expired.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmSslCertExpired"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmSslCertExpired"
            root.out.event.category.name = "BIG-IP GTM SSL cert state"
            root.out.event.message = "BIG-IP GTM SSL cert expired"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 84
      # bigipGtmSslCertWillExpire
      #
      # BIG-IP GTM SSL Cert will expire.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmSslCertWillExpire"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmSslCertWillExpire"
            root.out.event.category.name = "BIG-IP GTM SSL cert state"
            root.out.event.message = "BIG-IP GTM SSL cert will expire soon"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 85
      # bigipAsmSmtpRequestBlocked
      #
      # The SMTP request was blocked because it issued (at least one) violation(s) which is marked as blocking at the
      # current active policy in Application Security Module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAsmSmtpRequestBlocked"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAsmSmtpRequestBlocked"
            root.out.event.category.name = "BIG-IP SMTP request state"
            root.out.event.message = "BIG-IP SMTP request policy violation, blocked"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 86
      # bigipAsmSmtpRequestViolation
      #
      # The SMTP request issued a violation to the current active policy. This violation is marked as an alerting
      # violation in that policy in Application Security Module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAsmSmtpRequestViolation"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAsmSmtpRequestViolation"
            root.out.event.category.name = "BIG-IP SMTP request state"
            root.out.event.message = "BIG-IP SMTP request policy violation"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 87
      # bigipBladeTempHigh
      #
      # Blade temperature is too high.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipBladeTempHigh"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipBladeTempHigh"
            root.out.event.category.name = "BIG-IP Blade temperature threshold"
            root.out.event.message = "BIG-IP Blade temperature too high"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 88
      # bigipBladeNoPower
      #
      # A blade lost power. The blade may be pulled out
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipBladeNoPower"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipBladeNoPower"
            root.out.event.category.name = "BIG-IP blade power state"
            root.out.event.message = "BIG-IP blade power lost"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 89
      # bigipClusterdNoResponse
      #
      # The cluster daemon failed to respond for 10 or more seconds.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipClusterdNoResponse"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipClusterdNoResponse"
            root.out.event.category.name = "BIG-IP cluster daemon state"
            root.out.event.message = "BIG-IP cluster daemon failed to respond"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 90
      # bigipBladeOffline
      #
      # A blade has failed - offline.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipBladeOffline"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipBladeOffline"
            root.out.event.category.name = "BIG-IP blade state"
            root.out.event.message = "BIG-IP blade failed, offline"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 91
      # bigipAsmDosAttackDetected
      #
      # DoS attack detected by Application Security Module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAsmDosAttackDetected"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAsmDosAttackDetected"
            root.out.event.category.name = "BIG-IP ASM DoS detection"
            root.out.event.message = "BIG-IP ASM DoS attack detected"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 92
      # bigipAsmBruteForceAttackDetected
      #
      # Brute force attack detected by Application Security Module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAsmBruteForceAttackDetected"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAsmBruteForceAttackDetected"
            root.out.event.category.name = "BIG-IP ASM brute force detection"
            root.out.event.message = "BIG-IP ASM brute force attack detected"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 93
      # bigipAomCpuTempTooHigh
      #
      # AOM reports the air temperature near the host CPU too high.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAomCpuTempTooHigh"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAomCpuTempTooHigh"
            root.out.event.category.name = "BIG-IP AOM CPU air temperature threshold"
            root.out.event.message = "BIG-IP AOM CPU air temperature too high"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 94
      # bigipGtmKeyGenerationRollover
      #
      # DNSSEC Key generation has rolled over.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmKeyGenerationRollover"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmKeyGenerationRollover"
            root.out.event.category.name = "BIG-IP DNSSEC Key generation state"
            root.out.event.message = "BIG-IP DNSSEC Key generation rolled over"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 95
      # bigipGtmKeyGenerationExpiration
      #
      # DNSSEC Key generation has expired.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmKeyGenerationExpiration"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmKeyGenerationExpiration"
            root.out.event.category.name = "BIG-IP DNSSEC Key generation state"
            root.out.event.message = "BIG-IP DNSSEC Key generation expired"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 96
      # bigipRaidDiskFailure
      #
      # Disk failure in a RAID disk array.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipRaidDiskFailure"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipRaidDiskFailure"
            root.out.event.category.name = "BIG-IP RAID array disk state"
            root.out.event.message = "BIG-IP RAID array disk failed"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 97
      # bigipGtmProberPoolStatusChange
      #
      # Prober Pool Status Change.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmProberPoolStatusChange"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmProberPoolStatusChange"
            root.out.event.category.name = "BIG-IP prober pool state"
            root.out.event.message = "BIG-IP prober pool state changed"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 98
      # bigipGtmProberPoolStatusChangeReason
      #
      # Prober Pool Status Change Reason.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmProberPoolStatusChangeReason"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmProberPoolStatusChangeReason"
            root.out.event.category.name = "BIG-IP prober pool state"
            root.out.event.message = "BIG-IP prober pool state changed"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 99
      # bigipGtmProberPoolDisabled
      #
      # Prober Pool Disabled.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmProberPoolDisabled"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmProberPoolDisabled"
            root.out.event.category.name = "BIG-IP prober pool state"
            root.out.event.message = "BIG-IP prober pool disabled"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 100
      # bigipGtmProberPoolEnabled
      #
      # Prober Pool Enabled.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmProberPoolEnabled"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmProberPoolEnabled"
            root.out.event.category.name = "BIG-IP prober pool state"
            root.out.event.message = "BIG-IP prober pool enabled"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 101
      # bigipGtmProberPoolMbrStatusChange
      #
      # Prober Pool Member Status Change.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmProberPoolMbrStatusChange"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmProberPoolMbrStatusChange"
            root.out.event.category.name = "BIG-IP prober pool member state"
            root.out.event.message = "BIG-IP prober pool member state changed"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 102
      # bigipGtmProberPoolMbrStatusChangeReason
      #
      # Prober Pool Member Status Change Reason.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmProberPoolMbrStatusChangeReason"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmProberPoolMbrStatusChangeReason"
            root.out.event.category.name = "BIG-IP prober pool member state"
            root.out.event.message = "BIG-IP prober pool member state changed"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 103
      # bigipGtmProberPoolMbrDisabled
      #
      # Prober Pool Member Disabled.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmProberPoolMbrDisabled"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmProberPoolMbrDisabled"
            root.out.event.category.name = "BIG-IP prober pool member state"
            root.out.event.message = "BIG-IP prober pool member disabled"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 104
      # bigipGtmProberPoolMbrEnabled
      #
      # Prober Pool Member Enabled.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmProberPoolMbrEnabled"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmProberPoolMbrEnabled"
            root.out.event.category.name = "BIG-IP prober pool member state"
            root.out.event.message = "BIG-IP prober pool member enabled"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 105
      # bigipAvrAlertsMetricSnmp
      #
      # AVR alert metric state changed - notification for SNMP.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAvrAlertsMetricSnmp"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAvrAlertsMetricSnmp"
            root.out.event.category.name = "BIG-IP AVR alert"
            root.out.event.message = "BIG-IP AVR alert"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 106
      # bigipAvrAlertsMetricSmtp
      #
      # Deprecated! AVR alert metric state changed - notification for SMTP (based on SNMP).
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAvrAlertsMetricSmtp"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAvrAlertsMetricSmtp"
            root.out.event.category.name = "BIG-IP AVR alert"
            root.out.event.message = "BIG-IP AVR alert"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 107
      # bigipVcmpAlertsVcmpPowerOn
      #
      # A VCMP guest is powered on from a suspended or powered off state.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipVcmpAlertsVcmpPowerOn"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipVcmpAlertsVcmpPowerOn"
            root.out.event.category.name = "BIG-IP VCMP guest state"
            root.out.event.message = "BIG-IP VCMP guest powered on"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 108
      # bigipVcmpAlertsVcmpPowerOff
      #
      # A VCMP guest is powered off.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipVcmpAlertsVcmpPowerOff"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipVcmpAlertsVcmpPowerOff"
            root.out.event.category.name = "BIG-IP VCMP guest state"
            root.out.event.message = "BIG-IP VCMP guest powered off"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 109
      # bigipVcmpAlertsVcmpHBLost
      #
      # A VCMP guest heartbeat is lost.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipVcmpAlertsVcmpHBLost"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipVcmpAlertsVcmpHBLost"
            root.out.event.category.name = "BIG-IP VCMP guest state"
            root.out.event.message = "BIG-IP VCMP guest heartbeat lost"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 110
      # bigipVcmpAlertsVcmpHBDetected
      #
      # A VCMP guest heartbeat is detected or regained.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipVcmpAlertsVcmpHBDetected"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipVcmpAlertsVcmpHBDetected"
            root.out.event.category.name = "BIG-IP VCMP guest state"
            root.out.event.message = "BIG-IP VCMP guest heartbeat detected"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 111
      # bigipSsdMwiNearThreshold
      #
      # SSD disk wear-out indicator is near its threshold.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSsdMwiNearThreshold"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSsdMwiNearThreshold"
            root.out.event.category.name = "BIG-IP SSD wear-out threshold"
            root.out.event.message = "BIG-IP SSD wear-out indicator near threshold"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 112
      # bigipSsdMwiReachedThreshold
      #
      # SSD disk wear-out indicator has reached its threshold.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSsdMwiReachedThreshold"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSsdMwiReachedThreshold"
            root.out.event.category.name = "BIG-IP SSD wear-out threshold"
            root.out.event.message = "BIG-IP SSD wear-out indicator reached threshold"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 113
      # bigipSystemCheckAlertTempHigh
      #
      # Temperature is too high.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSystemCheckAlertTempHigh"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSystemCheckAlertTempHigh"
            root.out.event.category.name = "BIG-IP system temperature threshold"
            root.out.event.message = "BIG-IP system temperature too high"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 114
      # bigipSystemCheckAlertVoltageHigh
      #
      # Voltage is too high.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSystemCheckAlertVoltageHigh"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSystemCheckAlertVoltageHigh"
            root.out.event.category.name = "BIG-IP system voltage threshold"
            root.out.event.message = "BIG-IP system voltage too high"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 115
      # bigipSystemCheckAlertFanSpeedLow
      #
      # Fan speed is too low.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSystemCheckAlertFanSpeedLow"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSystemCheckAlertFanSpeedLow"
            root.out.event.category.name = "BIG-IP fan speed threshold"
            root.out.event.message = "BIG-IP fan speed too low"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 116
      # bigipLibhalSsdPhysicalDiskRemoved
      #
      # SSD physical disk was removed.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalSsdPhysicalDiskRemoved"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalSsdPhysicalDiskRemoved"
            root.out.event.category.name = "BIG-IP SSD physical disk state"
            root.out.event.message = "BIG-IP SSD physical disk removed"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 117
      # bigipLibhalSsdLogicalDiskRemoved
      #
      # SSD logical disk was removed.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalSsdLogicalDiskRemoved"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalSsdLogicalDiskRemoved"
            root.out.event.category.name = "BIG-IP SSD logical disk state"
            root.out.event.message = "BIG-IP SSD logical disk removed"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 118
      # bigipLibhalDiskBayRemoved
      #
      # Disk sled was removed from a bay.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalDiskBayRemoved"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalDiskBayRemoved"
            root.out.event.category.name = "BIG-IP disk sled state"
            root.out.event.message = "BIG-IP disk sled removed from bay"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 119
      # bigipLibhalBladePoweredOff
      #
      # Blade is about to be powered off.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalBladePoweredOff"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalBladePoweredOff"
            root.out.event.category.name = "BIG-IP blade state"
            root.out.event.message = "BIG-IP blade powering off"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 120
      # bigipLibhalSensorAlarmCritical
      #
      # Blade hardware sensor indicated critical alarm.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalSensorAlarmCritical"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalSensorAlarmCritical"
            root.out.event.category.name = "BIG-IP blade hardware state"
            root.out.event.message = "BIG-IP blade hardware critical"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 121
      # bigipChmandAlertFanTrayBad
      #
      # Chassis fan tray is bad or removed.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipChmandAlertFanTrayBad"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipChmandAlertFanTrayBad"
            root.out.event.category.name = "BIG-IP chassis fan tray state"
            root.out.event.message = "BIG-IP chassis fan tray bad or removed"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 122
      # bigipUnsolicitedRepliesExceededThreshold
      #
      # The DNS cache object received unsolicited query replies exceeding a configured threshold.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipUnsolicitedRepliesExceededThreshold"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipUnsolicitedRepliesExceededThreshold"
            root.out.event.category.name = "BIG-IP DNS cache object threshold"
            root.out.event.message = "BIG-IP DNS cache object excessive unsolicited query replies"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 123
      # bigipSystemCheckAlertVoltageLow
      #
      # Voltage is too low.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSystemCheckAlertVoltageLow"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSystemCheckAlertVoltageLow"
            root.out.event.category.name = "BIG-IP system voltage threshold"
            root.out.event.message = "BIG-IP system voltage too low"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 124
      # bigipSystemCheckAlertMilliVoltageHigh
      #
      # Milli-Voltage is too high.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSystemCheckAlertMilliVoltageHigh"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSystemCheckAlertMilliVoltageHigh"
            root.out.event.category.name = "BIG-IP system voltage threshold"
            root.out.event.message = "BIG-IP system voltage too high"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 125
      # bigipSystemCheckAlertCurrentHigh
      #
      # Current is too high.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSystemCheckAlertCurrentHigh"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSystemCheckAlertCurrentHigh"
            root.out.event.category.name = "BIG-IP system current threshold"
            root.out.event.message = "BIG-IP system current too high"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 126
      # bigipSystemCheckAlertPowerHigh
      #
      # Power is too high.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSystemCheckAlertPowerHigh"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSystemCheckAlertPowerHigh"
            root.out.event.category.name = "BIG-IP system power threshold"
            root.out.event.message = "BIG-IP system power too high"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 127
      # bigipSystemCheckAlertMilliVoltageLow
      #
      # Milli-Voltage is too low.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSystemCheckAlertMilliVoltageLow"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSystemCheckAlertMilliVoltageLow"
            root.out.event.category.name = "BIG-IP system voltage threshold"
            root.out.event.message = "BIG-IP system voltage too low"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 128
      # bigipSystemCheckAlertCurrentLow
      #
      # Current is too low.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSystemCheckAlertCurrentLow"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSystemCheckAlertCurrentLow"
            root.out.event.category.name = "BIG-IP system current threshold"
            root.out.event.message = "BIG-IP system current too low"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 129
      # bigipSystemCheckAlertPowerLow
      #
      # Power is too low.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSystemCheckAlertPowerLow"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSystemCheckAlertPowerLow"
            root.out.event.category.name = "BIG-IP system power threshold"
            root.out.event.message = "BIG-IP system power too low"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 130
      # bigipNodeRate
      #
      # A node has exceeded the allowed rate.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipNodeRate"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipNodeRate"
            root.out.event.category.name = "BIG-IP node rate threshold"
            root.out.event.message = "BIG-IP node rate exceeded"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 131
      # bigipMemberRate
      #
      # A pool member has exceeded the allowed rate.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipMemberRate"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipMemberRate"
            root.out.event.category.name = "BIG-IP pool member rate threshold"
            root.out.event.message = "BIG-IP pool member rate exceeded"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 132
      # bigipVirtualRate
      #
      # A virtual has exceeded the allowed rate.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipVirtualRate"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipVirtualRate"
            root.out.event.category.name = "BIG-IP virtual rate threshold"
            root.out.event.message = "BIG-IP virtual rate exceeded"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 133
      # bigipDosAttackStart
      #
      # A DOS attack start was detected.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipDosAttackStart"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipDosAttackStart"
            root.out.event.category.name = "BIG-IP DoS detection"
            root.out.event.message = "BIG-IP DoS attack started"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 134
      # bigipDosAttackStop
      #
      # A DOS attack stop was detected.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipDosAttackStop"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipDosAttackStop"
            root.out.event.category.name = "BIG-IP DoS detection"
            root.out.event.message = "BIG-IP DoS attack stopped"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 135
      # bigipLtmVsAvail
      #
      # A virtual has become available.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLtmVsAvail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLtmVsAvail"
            root.out.event.category.name = "BIG-IP LTM virtual state"
            root.out.event.message = "BIG-IP LTM virtual unavailable"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 136
      # bigipLtmVsUnavail
      #
      # A virtual has become unavailable.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLtmVsUnavail"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLtmVsUnavail"
            root.out.event.category.name = "BIG-IP LTM virtual state"
            root.out.event.message = "BIG-IP LTM virtual unavailable"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 137
      # bigipLtmVsEnabled
      #
      # A virtual has become enabled.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLtmVsEnabled"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLtmVsEnabled"
            root.out.event.category.name = "BIG-IP LTM virtual state"
            root.out.event.message = "BIG-IP LTM virtual enabled"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 138
      # bigipLtmVsDisabled
      #
      # A virtual has become disabled.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLtmVsDisabled"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLtmVsDisabled"
            root.out.event.category.name = "BIG-IP LTM virtual state"
            root.out.event.message = "BIG-IP LTM virtual disabled"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 139
      # bigipDnsRequestRateLimiterEngaged
      #
      # The DNS Services request rate limiter has been engaged.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipDnsRequestRateLimiterEngaged"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipDnsRequestRateLimiterEngaged"
            root.out.event.category.name = "BIG-IP DNS rate limiter state"
            root.out.event.message = "BIG-IP DNS request rate limiter engaged"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 140
      # bigipGtmRequestRateLimiterEngaged
      #
      # The GTM request rate limiter has been engaged.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmRequestRateLimiterEngaged"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmRequestRateLimiterEngaged"
            root.out.event.category.name = "BIG-IP GTM rate limiter state"
            root.out.event.message = "BIG-IP GTM request rate limiter engaged"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 141
      # bigipTrafficGroupStandby
      #
      # A traffic group is going into standby mode on the system.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipTrafficGroupStandby"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipTrafficGroupStandby"
            root.out.event.category.name = "BIG-IP traffic group state"
            root.out.event.message = "BIG-IP traffic group going standby"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 142
      # bigipTrafficGroupActive
      #
      # A traffic group is going into active mode on the system.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipTrafficGroupActive"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipTrafficGroupActive"
            root.out.event.category.name = "BIG-IP traffic group state"
            root.out.event.message = "BIG-IP traffic group going active"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 5
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 143
      # bigipTrafficGroupOffline
      #
      # A traffic group is going into offline mode on the system.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipTrafficGroupOffline"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipTrafficGroupOffline"
            root.out.event.category.name = "BIG-IP traffic group state"
            root.out.event.message = "BIG-IP traffic group going offline"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 144
      # bigipTrafficGroupForcedOffline
      #
      # A traffic group is going into forced offline mode on the system.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipTrafficGroupForcedOffline"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipTrafficGroupForcedOffline"
            root.out.event.category.name = "BIG-IP traffic group state"
            root.out.event.message = "BIG-IP traffic group forced offline"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 145
      # bigipTrafficGroupDeactivate
      #
      # A traffic group is being deactivated on the system.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipTrafficGroupDeactivate"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipTrafficGroupDeactivate"
            root.out.event.category.name = "BIG-IP traffic group state"
            root.out.event.message = "BIG-IP traffic group deactivated"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 146
      # bigipTrafficGroupActivate
      #
      # A traffic group is being activated on the system.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipTrafficGroupActivate"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipTrafficGroupActivate"
            root.out.event.category.name = "BIG-IP traffic group state"
            root.out.event.message = "BIG-IP traffic group activated"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Notice"

    - check: this.trap.SpecificTrap == 147
      # bigipPsPowerOn
      #
      # Power supply unit has powered on.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipPsPowerOn"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipPsPowerOn"
            root.out.event.category.name = "BIG-IP power supply state"
            root.out.event.message = "BIG-IP Power supply powered on"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 148
      # bigipPsPowerOff
      #
      # Power supply unit has powered off.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipPsPowerOff"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipPsPowerOff"
            root.out.event.category.name = "BIG-IP power supply state"
            root.out.event.message = "BIG-IP Power supply powered off"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 149
      # bigipPsAbsent
      #
      # Power supply unit is absent.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipPsAbsent"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipPsAbsent"
            root.out.event.category.name = "BIG-IP power supply state"
            root.out.event.message = "BIG-IP Power supply powered absent"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 150
      # bigipClusterPrimaryChanged
      #
      # The primary blade has been changed in the cluster system.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipClusterPrimaryChanged"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipClusterPrimaryChanged"
            root.out.event.category.name = "BIG-IP cluster state"
            root.out.event.message = "BIG-IP cluster primary blade changed"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 151
      # bigipSystemShutdown
      #
      # The system is shutting down.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSystemShutdown"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSystemShutdown"
            root.out.event.category.name = "BIG-IP system state"
            root.out.event.message = "BIG-IP system shutting down"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 152
      # bigipFipsDeviceError
      #
      # Encountered error in the FIPS card operation.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipFipsDeviceError"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipFipsDeviceError"
            root.out.event.category.name = "BIG-IP FIPS card state"
            root.out.event.message = "BIG-IP FIPS card errors"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 153
      # bigipUpdatePriority
      #
      # There is a high priority software update available.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipUpdatePriority"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipUpdatePriority"
            root.out.event.category.name = "BIG-IP updates"
            root.out.event.message = "BIG-IP high priority software update available"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 154
      # bigipUpdateServer
      #
      # Unable to connect to the F5 Update Check server.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipUpdateServer"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipUpdateServer"
            root.out.event.category.name = "BIG-IP update server state"
            root.out.event.message = "BIG-IP update server unavailable"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 155
      # bigipUpdateError
      #
      # There was an error checking for updates.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipUpdateError"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipUpdateError"
            root.out.event.category.name = "BIG-IP update server state"
            root.out.event.message = "BIG-IP update server errors"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 156
      # bigipGtmDeletedFromGroup
      #
      # BIG-IP GTM deleted from sync group.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmDeletedFromGroup"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmDeletedFromGroup"
            root.out.event.category.name = "BIG-IP GTM sync group state"
            root.out.event.message = "BIG-IP GTM deleted from sync group"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 157
      # bigipGtmServerNotAvailNoIP
      #
      # A server is becoming unavailable in global traffic management module.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmServerNotAvailNoIP"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGtmServerNotAvailNoIP"
            root.out.event.category.name = "BIG-IP GTM server state"
            root.out.event.message = "BIG-IP GTM server unavailable, no IP"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 158
      # bigipDDMPowerAlarm
      #
      # The Digital Diagnostic Monitoring on a pluggable optical transceiver detected an alarm condition. DDM monitors
      # both transmit and receive optical power to ensure the laser power is between vendor-specified power thresholds
      # for pluggable optical modules such as SFP/SFP+/QSFP+/QSFP28.
      #
      # An alarm can occur when a cable is removed from a plugged port, or when the transceiver is not configured or
      # operating properly.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipDDMPowerAlarm"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipDDMPowerAlarm"
            root.out.event.category.name = "BIG-IP DDM power state"
            root.out.event.message = "BIG-IP DDM power alarm"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 159
      # bigipDDMPowerWarn
      #
      # The Digital Diagnostic Monitoring on a pluggable optical transceiver detected a warning condition. DDM monitors
      # both transmit and receive optical power to ensure the laser power is between vendor-specified power thresholds
      # for pluggable optical modules such as SFP/SFP+/QSFP+/QSFP28.
      #
      # A warning can occur when a cable is removed from a plugged port, or when the transceiver is not configured or
      # operating properly.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipDDMPowerWarn"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipDDMPowerWarn"
            root.out.event.category.name = "BIG-IP DDM power state"
            root.out.event.message = "BIG-IP DDM power warning"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 160
      # bigipDDMPowerAlarmClear
      #
      # The Digital Diagnostic Monitoring on a pluggable optical transceiver no longer detects an alarm condition. DDM
      # monitors both transmit and receive optical power to ensure the laser power is between vendor-specified power
      # thresholds.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipDDMPowerAlarmClear"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipDDMPowerAlarmClear"
            root.out.event.category.name = "BIG-IP DDM power state"
            root.out.event.message = "BIG-IP DDM power alarm cleared"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 161
      # bigipDDMPowerWarnClear
      #
      # The Digital Diagnostic Monitoring on a pluggable optical transceiver no longer detects a warning condition. DDM
      # monitors both transmit and receive optical power to ensure the laser power is between vendor-specified power
      # thresholds.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipDDMPowerWarnClear"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipDDMPowerWarnClear"
            root.out.event.category.name = "BIG-IP DDM power state"
            root.out.event.message = "BIG-IP DDM power warning cleared"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 162
      # bigipDDMNonF5Optics
      #
      # A non-F5 pluggable optical transceiver is present in an interface.  See support.f5.com SOL8153 for restrictions
      # on third-party hardware components with F5 products.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipDDMNonF5Optics"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipDDMNonF5Optics"
            root.out.event.category.name = "BIG-IP DDM optics state"
            root.out.event.message = "BIG-IP DDM non-F5 optics"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 163
      # bigipTrafficGroupFailoverCond
      #
      # A traffic group has reported a failover condition and will not be able to go active.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipTrafficGroupFailoverCond"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipTrafficGroupFailoverCond"
            root.out.event.category.name = "BIG-IP traffic group failover state"
            root.out.event.message = "BIG-IP traffic group failover condition"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 164
      # bigipTrafficGroupFailoverCondClear
      #
      # Failover condition for a traffic group has been cleared.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipTrafficGroupFailoverCondClear"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipTrafficGroupFailoverCondClear"
            root.out.event.category.name = "BIG-IP traffic group failover state"
            root.out.event.message = "BIG-IP traffic group failover condition cleared"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 165
      # bigipDisableNonF5Optics
      #
      # A non-F5 pluggable optical transceiver has been disabled in an interface. See support.f5.com SOL8153 for
      # restrictions on third-party hardware components with F5 products.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipDisableNonF5Optics"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipDisableNonF5Optics"
            root.out.event.category.name = "BIG-IP DDM optics state"
            root.out.event.message = "BIG-IP DDM non-F5 optics, disabled"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 166
      # bigipFipsFault
      #
      # The FIPS card is currently in faulty state.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipFipsFault"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipFipsFault"
            root.out.event.category.name = "BIG-IP FIPS card state"
            root.out.event.message = "BIG-IP FIPS card fault"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 167
      # bigipLibhalAomEventWarning
      #
      # AOM has issued a warning event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomEventWarning"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomEventWarning"
            root.out.event.category.name = "BIG-IP AOM state"
            root.out.event.message = "BIG-IP AOM warning"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 168
      # bigipLibhalAomEventError
      #
      # AOM has issued an error event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomEventError"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomEventError"
            root.out.event.category.name = "BIG-IP AOM state"
            root.out.event.message = "BIG-IP AOM error"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 169
      # bigipLibhalAomEventAlert
      #
      # AOM has issued an alert event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomEventAlert"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomEventAlert"
            root.out.event.category.name = "BIG-IP AOM state"
            root.out.event.message = "BIG-IP AOM alert"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 170
      # bigipLibhalAomEventCritical
      #
      # AOM has issued a critical event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomEventCritical"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomEventCritical"
            root.out.event.category.name = "BIG-IP AOM state"
            root.out.event.message = "BIG-IP AOM critical"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 171
      # bigipLibhalAomEventEmergency
      #
      # AOM has issued an emergency event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomEventEmergency"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomEventEmergency"
            root.out.event.category.name = "BIG-IP AOM state"
            root.out.event.message = "BIG-IP AOM emergency"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 0
            root.out.event.severity.level = "Emergency"

    - check: this.trap.SpecificTrap == 172
      # bigipLibhalAomEventInfo
      #
      # AOM has issued an information event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomEventInfo"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomEventInfo"
            root.out.event.category.name = "BIG-IP AOM state"
            root.out.event.message = "BIG-IP AOM information"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 173
      # bigipLibhalAomSensorTempWarning
      #
      # AOM has issued a temperature sensor warning level event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorTempWarning"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorTempWarning"
            root.out.event.category.name = "BIG-IP AOM temperature sensor state"
            root.out.event.message = "BIG-IP AOM temperature sensor warning"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 174
      # bigipLibhalAomSensorTempError
      #
      # AOM has issued a temperature sensor error level event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorTempError"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorTempError"
            root.out.event.category.name = "BIG-IP AOM temperature sensor state"
            root.out.event.message = "BIG-IP AOM temperature sensor error"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 175
      # bigipLibhalAomSensorTempAlert
      #
      # AOM has issued a temperature sensor alert level event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorTempAlert"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorTempAlert"
            root.out.event.category.name = "BIG-IP AOM temperature sensor state"
            root.out.event.message = "BIG-IP AOM temperature sensor alert"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 176
      # bigipLibhalAomSensorTempCritical
      #
      # AOM has issued a temperature sensor critical level event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorTempCritical"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorTempCritical"
            root.out.event.category.name = "BIG-IP AOM temperature sensor state"
            root.out.event.message = "BIG-IP AOM temperature sensor critical"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 177
      # bigipLibhalAomSensorTempEmergency
      #
      # AOM has issued a temperature sensor emergency level event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorTempEmergency"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorTempEmergency"
            root.out.event.category.name = "BIG-IP AOM temperature sensor state"
            root.out.event.message = "BIG-IP AOM temperature sensor emergency"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 0
            root.out.event.severity.level = "Emergency"

    - check: this.trap.SpecificTrap == 178
      # bigipLibhalAomSensorTempInfo
      #
      # AOM has issued a temperature sensor information level event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorTempInfo"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorTempInfo"
            root.out.event.category.name = "BIG-IP AOM temperature sensor state"
            root.out.event.message = "BIG-IP AOM temperature sensor information"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 179
      # bigipLibhalAomSensorFanWarning
      #
      # AOM has issued a fan sensor warning level event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorFanWarning"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorFanWarning"
            root.out.event.category.name = "BIG-IP AOM fan sensor state"
            root.out.event.message = "BIG-IP AOM fan sensor warning"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 180
      # bigipLibhalAomSensorFanError
      #
      # AOM has issued a fan sensor error level event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorFanError"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorFanError"
            root.out.event.category.name = "BIG-IP AOM fan sensor state"
            root.out.event.message = "BIG-IP AOM fan sensor error"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 181
      # bigipLibhalAomSensorFanAlert
      #
      # AOM has issued a fan sensor alert level event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorFanAlert"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorFanAlert"
            root.out.event.category.name = "BIG-IP AOM fan sensor state"
            root.out.event.message = "BIG-IP AOM fan sensor alert"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 182
      # bigipLibhalAomSensorFanCritical
      #
      # AOM has issued a fan sensor critical level event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorFanCritical"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorFanCritical"
            root.out.event.category.name = "BIG-IP AOM fan sensor state"
            root.out.event.message = "BIG-IP AOM fan sensor critical"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 183
      # bigipLibhalAomSensorFanEmergency
      #
      # AOM has issued a fan sensor emergency level event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorFanEmergency"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorFanEmergency"
            root.out.event.category.name = "BIG-IP AOM fan sensor state"
            root.out.event.message = "BIG-IP AOM fan sensor emergency"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 0
            root.out.event.severity.level = "Emergency"

    - check: this.trap.SpecificTrap == 184
      # bigipLibhalAomSensorFanInfo
      #
      # AOM has issued a fan sensor information level event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorFanInfo"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorFanInfo"
            root.out.event.category.name = "BIG-IP AOM fan sensor state"
            root.out.event.message = "BIG-IP AOM fan sensor information"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 185
      # bigipLibhalAomSensorPwrWarning
      #
      # AOM has issued a power sensor warning level event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorPwrWarning"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorPwrWarning"
            root.out.event.category.name = "BIG-IP AOM power sensor state"
            root.out.event.message = "BIG-IP AOM power sensor warning"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 186
      # bigipLibhalAomSensorPwrError
      #
      # AOM has issued a power sensor error level event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorPwrError"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorPwrError"
            root.out.event.category.name = "BIG-IP AOM power sensor state"
            root.out.event.message = "BIG-IP AOM power sensor error"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 187
      # bigipLibhalAomSensorPwrAlert
      #
      # AOM has issued a power sensor alert level event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorPwrAlert"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorPwrAlert"
            root.out.event.category.name = "BIG-IP AOM power sensor state"
            root.out.event.message = "BIG-IP AOM power sensor alert"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 188
      # bigipLibhalAomSensorPwrCritical
      #
      # AOM has issued a power sensor critical level event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorPwrCritical"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorPwrCritical"
            root.out.event.category.name = "BIG-IP AOM power sensor state"
            root.out.event.message = "BIG-IP AOM power sensor critical"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 189
      # bigipLibhalAomSensorPwrEmergency
      #
      # AOM has issued a power sensor emergency level event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorPwrEmergency"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorPwrEmergency"
            root.out.event.category.name = "BIG-IP AOM power sensor state"
            root.out.event.message = "BIG-IP AOM power sensor emergency"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 0
            root.out.event.severity.level = "Emergency"

    - check: this.trap.SpecificTrap == 190
      # bigipLibhalAomSensorPwrInfo
      #
      # AOM has issued a power sensor information level event.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorPwrInfo"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipLibhalAomSensorPwrInfo"
            root.out.event.category.name = "BIG-IP AOM power sensor state"
            root.out.event.message = "BIG-IP AOM power sensor information"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 191
      # bigipAccessGlobalLicenseTHDExceeded
      #
      # Global access license usage exceeds threshold.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAccessGlobalLicenseTHDExceeded"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAccessGlobalLicenseTHDExceeded"
            root.out.event.category.name = "BIG-IP global access license threshold"
            root.out.event.message = "BIG-IP global access license exceeded"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 192
      # bigipAccessCCULicenseTHDExceeded
      #
      # Global concurrent connectivity license usage exceeds threshold.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAccessCCULicenseTHDExceeded"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAccessCCULicenseTHDExceeded"
            root.out.event.category.name = "BIG-IP global concurrent connectivity license threshold"
            root.out.event.message = "BIG-IP global concurrent connectivity license exceeded"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 193
      # bigipAccessURLFLicenseTHDExceeded
      #
      # Global URL filtering license usage exceeds threshold.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAccessURLFLicenseTHDExceeded"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAccessURLFLicenseTHDExceeded"
            root.out.event.category.name = "BIG-IP global URL filtering license threshold"
            root.out.event.message = "BIG-IP global URL filtering license exceeded"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 194
      # bigipAccessHATransition
      #
      # APM HA state transitioned.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAccessHATransition"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAccessHATransition"
            root.out.event.category.name = "BIG-IP APM HA state"
            root.out.event.message = "BIG-IP APM HA transitioned"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

    - check: this.trap.SpecificTrap == 195
      # bigipMonDBDaemonHungSQL
      #
      # Hung SQL monitor connection.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipMonDBDaemonHungSQL"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipMonDBDaemonHungSQL"
            root.out.event.category.name = "BIG-IP DBDaemon state"
            root.out.event.message = "BIG-IP DBDaemon connection hung"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 196
      # bigipMonDBDaemonIdle
      #
      # DBDaemon unresponsive, shut down.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipMonDBDaemonIdle"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipMonDBDaemonIdle"
            root.out.event.category.name = "BIG-IP DBDaemon state"
            root.out.event.message = "BIG-IP DBDaemon unresponsive, shut down"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 197
      # bigipAccessURLFLimitedLicenseTHDExceeded
      #
      # Global URL filtering limited license usage exceeds threshold.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAccessURLFLimitedLicenseTHDExceeded"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipAccessURLFLimitedLicenseTHDExceeded"
            root.out.event.category.name = "BIG-IP global URL filtering limited license threshold"
            root.out.event.message = "BIG-IP global URL filtering limited license exceeded"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 198
      # bigipChassisInadequatePower
      #
      # Chassis is inadequately powered.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipChassisInadequatePower"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipChassisInadequatePower"
            root.out.event.category.name = "BIG-IP chassis power state"
            root.out.event.message = "BIG-IP chassis power inadequate"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 199
      # bigipChassisPsUnidentified
      #
      # Power supply unit is unidentified.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipChassisPsUnidentified"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipChassisPsUnidentified"
            root.out.event.category.name = "BIG-IP chassis power state"
            root.out.event.message = "BIG-IP chassis power supply unit unidentified"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 200
      # bigipIPsecTunnelUp
      #
      # An IPSEC Tunnel has come up.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipIPsecTunnelUp"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipIPsecTunnelUp"
            root.out.event.category.name = "BIG-IP IPSEC tunnel state"
            root.out.event.message = "BIG-IP IPSEC tunnel up"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 201
      # bigipIPsecTunnelDown
      #
      # An IPSEC Tunnel has come down.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipIPsecTunnelDown"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipIPsecTunnelDown"
            root.out.event.category.name = "BIG-IP IPSEC tunnel state"
            root.out.event.message = "BIG-IP IPSEC tunnel down"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 202
      # bigipMrfPeerDelayHealthChanged
      #
      # Peer health has changed due to peer delay.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      # bigipNotifyObjHostName (DisplayString) - The host name.
      # bigipNotifyObjSeverity (DisplayString) - The severity level of the trap.
      # bigipNotifyObjEventId (DisplayString) - The message log ID.
      # bigipNotifyObjTimestamp (DisplayString) - The time of trap generation.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjHostName = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 1 {
              this.trap.VarBinds.index(1).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjSeverity = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 2 {
              this.trap.VarBinds.index(2).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjEventId = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 3 {
              this.trap.VarBinds.index(3).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjTimestamp = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 4 {
              this.trap.VarBinds.index(4).Value.snmp_display_string()
            }

            root.out.object.label = if root.out.exists("f5.bigipNotifyObjHostName") {
              "host: " + root.out.f5.bigipNotifyObjHostName
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipMrfPeerDelayHealthChanged"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipMrfPeerDelayHealthChanged"
            root.out.event.category.name = "BIG-IP MRF peer state"
            root.out.event.message = "BIG-IP peer health changed, peer delay"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

            root.out.event.message = if root.out.exists("object.label") {
              root.out.event.message + "  [ " + root.out.object.label + " ]"
            }

    - check: this.trap.SpecificTrap == 203
      # bigipMrfPeerOutgoingRateLimitChanged
      #
      # The peer outgoing ratelimit has changed
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      # bigipNotifyObjHostName (DisplayString) - The host name.
      # bigipNotifyObjSeverity (DisplayString) - The severity level of the trap.
      # bigipNotifyObjEventId (DisplayString) - The message log ID.
      # bigipNotifyObjTimestamp (DisplayString) - The time of trap generation.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjHostName = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 1 {
              this.trap.VarBinds.index(1).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjSeverity = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 2 {
              this.trap.VarBinds.index(2).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjEventId = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 3 {
              this.trap.VarBinds.index(3).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjTimestamp = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 4 {
              this.trap.VarBinds.index(4).Value.snmp_display_string()
            }

            root.out.object.label = if root.out.exists("f5.bigipNotifyObjHostName") {
              "host: " + root.out.f5.bigipNotifyObjHostName
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipMrfPeerOutgoingRateLimitChanged"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipMrfPeerOutgoingRateLimitChanged"
            root.out.event.category.name = "BIG-IP MRF peer state"
            root.out.event.message = "BIG-IP peer outgoing rate limit changed"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

            root.out.event.message = if root.out.exists("object.label") {
              root.out.event.message + "  [ " + root.out.object.label + " ]"
            }

    - check: this.trap.SpecificTrap == 204
      # bigipMrfPeerIncomingRateLimitChanged
      #
      # The peer incoming ratelimit has changed.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      # bigipNotifyObjHostName (DisplayString) - The host name.
      # bigipNotifyObjSeverity (DisplayString) - The severity level of the trap.
      # bigipNotifyObjEventId (DisplayString) - The message log ID.
      # bigipNotifyObjTimestamp (DisplayString) - The time of trap generation.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjHostName = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 1 {
              this.trap.VarBinds.index(1).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjSeverity = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 2 {
              this.trap.VarBinds.index(2).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjEventId = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 3 {
              this.trap.VarBinds.index(3).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjTimestamp = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 4 {
              this.trap.VarBinds.index(4).Value.snmp_display_string()
            }

            root.out.object.label = if root.out.exists("f5.bigipNotifyObjHostName") {
              "host: " + root.out.f5.bigipNotifyObjHostName
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipMrfPeerIncomingRateLimitChanged"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipMrfPeerIncomingRateLimitChanged"
            root.out.event.category.name = "BIG-IP MRF peer state"
            root.out.event.message = "BIG-IP peer incoming rate limit changed"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

            root.out.event.message = if root.out.exists("object.label") {
              root.out.event.message + "  [ " + root.out.object.label + " ]"
            }

    - check: this.trap.SpecificTrap == 205
      # bigipCertExpiration
      #
      # Certificate with lifecycle management options configured is going to expire within a week.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipCertExpiration"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipCertExpiration"
            root.out.event.category.name = "BIG-IP cert state"
            root.out.event.message = "BIG-IP cert expired"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

    - check: this.trap.SpecificTrap == 206
      # bigipMrfPeerErrorsHealthChanged
      #
      # Peer health has changed due to error responses.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      # bigipNotifyObjHostName (DisplayString) - The host name.
      # bigipNotifyObjSeverity (DisplayString) - The severity level of the trap.
      # bigipNotifyObjEventId (DisplayString) - The message log ID.
      # bigipNotifyObjTimestamp (DisplayString) - The time of trap generation.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjHostName = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 1 {
              this.trap.VarBinds.index(1).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjSeverity = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 2 {
              this.trap.VarBinds.index(2).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjEventId = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 3 {
              this.trap.VarBinds.index(3).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjTimestamp = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 4 {
              this.trap.VarBinds.index(4).Value.snmp_display_string()
            }

            root.out.object.label = if root.out.exists("f5.bigipNotifyObjHostName") {
              "host: " + root.out.f5.bigipNotifyObjHostName
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipMrfPeerErrorsHealthChanged"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipMrfPeerErrorsHealthChanged"
            root.out.event.category.name = "BIG-IP MRF peer state"
            root.out.event.message = "BIG-IP peer health changed, error responses"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

            root.out.event.message = if root.out.exists("object.label") {
              root.out.event.message + "  [ " + root.out.object.label + " ]"
            }

    - check: this.trap.SpecificTrap == 207
      # bigipMrfPeerTimeoutsHealthChanged
      #
      # Peer health has changed due to peer timeouts.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      # bigipNotifyObjHostName (DisplayString) - The host name.
      # bigipNotifyObjSeverity (DisplayString) - The severity level of the trap.
      # bigipNotifyObjEventId (DisplayString) - The message log ID.
      # bigipNotifyObjTimestamp (DisplayString) - The time of trap generation.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjHostName = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 1 {
              this.trap.VarBinds.index(1).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjSeverity = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 2 {
              this.trap.VarBinds.index(2).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjEventId = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 3 {
              this.trap.VarBinds.index(3).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjTimestamp = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 4 {
              this.trap.VarBinds.index(4).Value.snmp_display_string()
            }

            root.out.object.label = if root.out.exists("f5.bigipNotifyObjHostName") {
              "host: " + root.out.f5.bigipNotifyObjHostName
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipMrfPeerTimeoutsHealthChanged"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipMrfPeerTimeoutsHealthChanged"
            root.out.event.category.name = "BIG-IP MRF peer state"
            root.out.event.message = "BIG-IP peer health changed, peer timeouts"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

            root.out.event.message = if root.out.exists("object.label") {
              root.out.event.message + "  [ " + root.out.object.label + " ]"
            }

    - check: this.trap.SpecificTrap == 208
      # bigipMrfPeerHealthChanged
      #
      # Peer health has changed.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      # bigipNotifyObjHostName (DisplayString) - The host name.
      # bigipNotifyObjSeverity (DisplayString) - The severity level of the trap.
      # bigipNotifyObjEventId (DisplayString) - The message log ID.
      # bigipNotifyObjTimestamp (DisplayString) - The time of trap generation.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjHostName = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 1 {
              this.trap.VarBinds.index(1).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjSeverity = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 2 {
              this.trap.VarBinds.index(2).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjEventId = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 3 {
              this.trap.VarBinds.index(3).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjTimestamp = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 4 {
              this.trap.VarBinds.index(4).Value.snmp_display_string()
            }

            root.out.object.label = if root.out.exists("f5.bigipNotifyObjHostName") {
              "host: " + root.out.f5.bigipNotifyObjHostName
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipMrfPeerHealthChanged"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipMrfPeerHealthChanged"
            root.out.event.category.name = "BIG-IP MRF peer state"
            root.out.event.message = "BIG-IP peer health changed"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

            root.out.event.message = if root.out.exists("object.label") {
              root.out.event.message + "  [ " + root.out.object.label + " ]"
            }

    - check: this.trap.SpecificTrap == 209
      # bigipMrfPeerConnectionStateChanged
      #
      # Peer connection state has changed: Disconnected.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      # bigipNotifyObjHostName (DisplayString) - The host name.
      # bigipNotifyObjSeverity (DisplayString) - The severity level of the trap.
      # bigipNotifyObjEventId (DisplayString) - The message log ID.
      # bigipNotifyObjTimestamp (DisplayString) - The time of trap generation.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjHostName = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 1 {
              this.trap.VarBinds.index(1).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjSeverity = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 2 {
              this.trap.VarBinds.index(2).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjEventId = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 3 {
              this.trap.VarBinds.index(3).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjTimestamp = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 4 {
              this.trap.VarBinds.index(4).Value.snmp_display_string()
            }

            root.out.object.label = if root.out.exists("f5.bigipNotifyObjHostName") {
              "host: " + root.out.f5.bigipNotifyObjHostName
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipMrfPeerConnectionStateChanged"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipMrfPeerConnectionStateChanged"
            root.out.event.category.name = "BIG-IP MRF peer state"
            root.out.event.message = "BIG-IP peer connection changed, disconnected"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

            root.out.event.message = if root.out.exists("object.label") {
              root.out.event.message + "  [ " + root.out.object.label + " ]"
            }

    - check: this.trap.SpecificTrap == 210
      # bigipSctpActivePathDown
      #
      # SCTP active path is down.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      # bigipNotifyObjHostName (DisplayString) - The host name.
      # bigipNotifyObjSeverity (DisplayString) - The severity level of the trap.
      # bigipNotifyObjEventId (DisplayString) - The message log ID.
      # bigipNotifyObjTimestamp (DisplayString) - The time of trap generation.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjHostName = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 1 {
              this.trap.VarBinds.index(1).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjSeverity = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 2 {
              this.trap.VarBinds.index(2).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjEventId = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 3 {
              this.trap.VarBinds.index(3).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjTimestamp = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 4 {
              this.trap.VarBinds.index(4).Value.snmp_display_string()
            }

            root.out.object.label = if root.out.exists("f5.bigipNotifyObjHostName") {
              "host: " + root.out.f5.bigipNotifyObjHostName
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSctpActivePathDown"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSctpActivePathDown"
            root.out.event.category.name = "BIG-IP SCTP active path state"
            root.out.event.message = "BIG-IP SCTP active path down"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

            root.out.event.message = if root.out.exists("object.label") {
              root.out.event.message + "  [ " + root.out.object.label + " ]"
            }

    - check: this.trap.SpecificTrap == 211
      # bigipSctpPathRestored
      #
      # SCTP path is restored.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      # bigipNotifyObjHostName (DisplayString) - The host name.
      # bigipNotifyObjSeverity (DisplayString) - The severity level of the trap.
      # bigipNotifyObjEventId (DisplayString) - The message log ID.
      # bigipNotifyObjTimestamp (DisplayString) - The time of trap generation.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjHostName = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 1 {
              this.trap.VarBinds.index(1).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjSeverity = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 2 {
              this.trap.VarBinds.index(2).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjEventId = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 3 {
              this.trap.VarBinds.index(3).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjTimestamp = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 4 {
              this.trap.VarBinds.index(4).Value.snmp_display_string()
            }

            root.out.object.label = if root.out.exists("f5.bigipNotifyObjHostName") {
              "host: " + root.out.f5.bigipNotifyObjHostName
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSctpPathRestored"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipSctpPathRestored"
            root.out.event.category.name = "BIG-IP SCTP active path state"
            root.out.event.message = "BIG-IP SCTP active path restored"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

            root.out.event.message = if root.out.exists("object.label") {
              root.out.event.message + "  [ " + root.out.object.label + " ]"
            }

    - check: this.trap.SpecificTrap == 212
      # bigipGeoredundancyOffline
      #
      # Georedundancy status is offline
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      # bigipNotifyObjHostName (DisplayString) - The host name.
      # bigipNotifyObjSeverity (DisplayString) - The severity level of the trap.
      # bigipNotifyObjEventId (DisplayString) - The message log ID.
      # bigipNotifyObjTimestamp (DisplayString) - The time of trap generation.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjHostName = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 1 {
              this.trap.VarBinds.index(1).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjSeverity = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 2 {
              this.trap.VarBinds.index(2).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjEventId = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 3 {
              this.trap.VarBinds.index(3).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjTimestamp = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 4 {
              this.trap.VarBinds.index(4).Value.snmp_display_string()
            }

            root.out.object.label = if root.out.exists("f5.bigipNotifyObjHostName") {
              "host: " + root.out.f5.bigipNotifyObjHostName
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGeoredundancyOffline"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGeoredundancyOffline"
            root.out.event.category.name = "BIG-IP geo-redundancy state"
            root.out.event.message = "BIG-IP geo-redundancy offline"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

            root.out.event.message = if root.out.exists("object.label") {
              root.out.event.message + "  [ " + root.out.object.label + " ]"
            }

    - check: this.trap.SpecificTrap == 213
      # bigipGeoredundancyConnected
      #
      # Georedundancy status is connected
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      # bigipNotifyObjHostName (DisplayString) - The host name.
      # bigipNotifyObjSeverity (DisplayString) - The severity level of the trap.
      # bigipNotifyObjEventId (DisplayString) - The message log ID.
      # bigipNotifyObjTimestamp (DisplayString) - The time of trap generation.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjHostName = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 1 {
              this.trap.VarBinds.index(1).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjSeverity = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 2 {
              this.trap.VarBinds.index(2).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjEventId = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 3 {
              this.trap.VarBinds.index(3).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjTimestamp = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 4 {
              this.trap.VarBinds.index(4).Value.snmp_display_string()
            }

            root.out.object.label = if root.out.exists("f5.bigipNotifyObjHostName") {
              "host: " + root.out.f5.bigipNotifyObjHostName
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGeoredundancyConnected"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGeoredundancyConnected"
            root.out.event.category.name = "BIG-IP geo-redundancy state"
            root.out.event.message = "BIG-IP geo-redundancy connected"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

            root.out.event.message = if root.out.exists("object.label") {
              root.out.event.message + "  [ " + root.out.object.label + " ]"
            }

    - check: this.trap.SpecificTrap == 214
      # bigipGeoredundancyReloadReceiving
      #
      # Georedundancy status is reload Receiving
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      # bigipNotifyObjHostName (DisplayString) - The host name.
      # bigipNotifyObjSeverity (DisplayString) - The severity level of the trap.
      # bigipNotifyObjEventId (DisplayString) - The message log ID.
      # bigipNotifyObjTimestamp (DisplayString) - The time of trap generation.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjHostName = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 1 {
              this.trap.VarBinds.index(1).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjSeverity = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 2 {
              this.trap.VarBinds.index(2).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjEventId = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 3 {
              this.trap.VarBinds.index(3).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjTimestamp = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 4 {
              this.trap.VarBinds.index(4).Value.snmp_display_string()
            }

            root.out.object.label = if root.out.exists("f5.bigipNotifyObjHostName") {
              "host: " + root.out.f5.bigipNotifyObjHostName
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGeoredundancyReloadReceiving"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGeoredundancyReloadReceiving"
            root.out.event.category.name = "BIG-IP geo-redundancy state"
            root.out.event.message = "BIG-IP geo-redundancy reload receiving"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

            root.out.event.message = if root.out.exists("object.label") {
              root.out.event.message + "  [ " + root.out.object.label + " ]"
            }

    - check: this.trap.SpecificTrap == 215
      # bigipGeoredundancyReloadSending
      #
      # Georedundancy status is reload sending
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      # bigipNotifyObjHostName (DisplayString) - The host name.
      # bigipNotifyObjSeverity (DisplayString) - The severity level of the trap.
      # bigipNotifyObjEventId (DisplayString) - The message log ID.
      # bigipNotifyObjTimestamp (DisplayString) - The time of trap generation.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjHostName = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 1 {
              this.trap.VarBinds.index(1).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjSeverity = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 2 {
              this.trap.VarBinds.index(2).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjEventId = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 3 {
              this.trap.VarBinds.index(3).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjTimestamp = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 4 {
              this.trap.VarBinds.index(4).Value.snmp_display_string()
            }

            root.out.object.label = if root.out.exists("f5.bigipNotifyObjHostName") {
              "host: " + root.out.f5.bigipNotifyObjHostName
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGeoredundancyReloadSending"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGeoredundancyReloadSending"
            root.out.event.category.name = "BIG-IP geo-redundancy state"
            root.out.event.message = "BIG-IP geo-redundancy reload sending"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"

            root.out.event.message = if root.out.exists("object.label") {
              root.out.event.message + "  [ " + root.out.object.label + " ]"
            }

    - check: this.trap.SpecificTrap == 216
      # bigipGeoredundancyWatchdogAlive
      #
      # Georedundancy watchdog is alive
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      # bigipNotifyObjHostName (DisplayString) - The host name.
      # bigipNotifyObjSeverity (DisplayString) - The severity level of the trap.
      # bigipNotifyObjEventId (DisplayString) - The message log ID.
      # bigipNotifyObjTimestamp (DisplayString) - The time of trap generation.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjHostName = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 1 {
              this.trap.VarBinds.index(1).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjSeverity = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 2 {
              this.trap.VarBinds.index(2).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjEventId = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 3 {
              this.trap.VarBinds.index(3).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjTimestamp = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 4 {
              this.trap.VarBinds.index(4).Value.snmp_display_string()
            }

            root.out.object.label = if root.out.exists("f5.bigipNotifyObjHostName") {
              "host: " + root.out.f5.bigipNotifyObjHostName
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGeoredundancyWatchdogAlive"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGeoredundancyWatchdogAlive"
            root.out.event.category.name = "BIG-IP geo-redundancy watchdog state"
            root.out.event.message = "BIG-IP geo-redundancy watchdog alive"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Informational"

            root.out.event.message = if root.out.exists("object.label") {
              root.out.event.message + "  [ " + root.out.object.label + " ]"
            }

    - check: this.trap.SpecificTrap == 217
      # bigipGeoredundancyWatchdogExpired
      #
      # Georedundancy watchdog is expired
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      # bigipNotifyObjHostName (DisplayString) - The host name.
      # bigipNotifyObjSeverity (DisplayString) - The severity level of the trap.
      # bigipNotifyObjEventId (DisplayString) - The message log ID.
      # bigipNotifyObjTimestamp (DisplayString) - The time of trap generation.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjHostName = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 1 {
              this.trap.VarBinds.index(1).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjSeverity = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 2 {
              this.trap.VarBinds.index(2).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjEventId = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 3 {
              this.trap.VarBinds.index(3).Value.snmp_display_string()
            }
            root.out.f5.bigipNotifyObjTimestamp = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 4 {
              this.trap.VarBinds.index(4).Value.snmp_display_string()
            }

            root.out.object.label = if root.out.exists("f5.bigipNotifyObjHostName") {
              "host: " + root.out.f5.bigipNotifyObjHostName
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGeoredundancyWatchdogExpired"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipGeoredundancyWatchdogExpired"
            root.out.event.category.name = "BIG-IP geo-redundancy watchdog state"
            root.out.event.message = "BIG-IP geo-redundancy watchdog expired"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

            root.out.event.message = if root.out.exists("object.label") {
              root.out.event.message + "  [ " + root.out.object.label + " ]"
            }

    - check: this.trap.SpecificTrap == 218
      # bigipExternalLinkDown
      #
      # An interface link status changed. This can be an administrative disable. For a fixed port, this is when
      # network cables are removed, for a pluggable port (such as an SFP or XFP port), this is when the pluggable unit
      # is unplugged, or when a cable is removed from a plugged port. The possible values are DOWN or DISABLED
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipExternalLinkDown"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipExternalLinkDown"
            root.out.event.category.name = "BIG-IP external link state"
            root.out.event.message = "BIG-IP external link down"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 219
      # bigipExternalLinkUp
      #
      # An interface link status changed. This can be an administrative enable. For a fixed port, this is when network
      # cables are inserted, for a pluggable port (such as an SFP or XFP port), this is when the pluggable unit is
      # inserted, or when a cable is inserted. The possible value is UP.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipExternalLinkUp"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipExternalLinkUp"
            root.out.event.category.name = "BIG-IP external link state"
            root.out.event.message = "BIG-IP external link up"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - check: this.trap.SpecificTrap == 220
      # bigipFipsDeviceHighTemperature
      #
      # The FIPS device has overheated and is currently above 80 degrees Celsius.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipFipsDeviceHighTemperature"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipFipsDeviceHighTemperature"
            root.out.event.category.name = "BIG-IP FIPS device temperature state"
            root.out.event.message = "BIG-IP FIPS device temperature above 80C"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 2
            root.out.event.severity.level = "Critical"

    - check: this.trap.SpecificTrap == 221
      # bigipFipsDeviceCriticalTemperature
      #
      # The FIPS device temperature has exceeded 85 degrees Celsius.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipFipsDeviceCriticalTemperature"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipFipsDeviceCriticalTemperature"
            root.out.event.category.name = "BIG-IP FIPS device temperature state"
            root.out.event.message = "BIG-IP FIPS device temperature above 85C"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 1
            root.out.event.severity.level = "Alert"

    - check: this.trap.SpecificTrap == 222
      # bigipFipsDeviceNormalTemperature
      #
      # The FIPS device temperature has fallen back to below 80 degrees Celsius.
      #
      # bigipNotifyObjMsg (DisplayString) - The additional information about the related notification.
      processors:
        - mapping: |-
            #!blobl
            root = this

            root.out.f5.bigipNotifyObjMsg = if this.trap.exists("VarBinds") && this.trap.VarBinds.length() > 0 {
              this.trap.VarBinds.index(0).Value.snmp_display_string()
            }

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipFipsDeviceNormalTemperature"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-bigipFipsDeviceNormalTemperature"
            root.out.event.category.name = "BIG-IP FIPS device temperature state"
            root.out.event.message = "BIG-IP FIPS device temperature normal, below 80C"
            root.out.event.message = if root.out.exists("f5.bigipNotifyObjMsg") {
              root.out.event.message + ": " + root.out.f5.bigipNotifyObjMsg
            }
            root.out.event.severity.code = 6
            root.out.event.severity.level = "Informational"

    - processors:
        - label: default
          mapping: |
            #!blobl
            root = this

            root.out.event.class.name = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-unknown"
            root.out.event.id = "SNMPTRAP-F5-BIGIP-COMMON-MIB-bigipNotifications-unknown-" + this.trap.SpecificTrap.string()
            root.out.event.category.name = "unknown specific trap"
            root.out.event.message = "unknown specific trap " + this.trap.SpecificTrap.string() + " from F5 F5-BIGIP-COMMON-MIB::bigipNotifications"
            root.out.event.severity.code = 4
            root.out.event.severity.level = "Warning"
