- mapping: |-
    #!blobl
    root = this
    root.out.origin.agent.name = "ALLIEDTELESYN-MIB"
- switch:
    - check: this.trap.SpecificTrap == 1
      processors:
        - label: flash_failure_trap
          mapping: |-
            #!blobl
            root = this

            root.out.event.category.name = "Intrusion/Attack"
            root.out.object.name = ""
            root.out.event.message = this.trap.VarBinds.index(0).Value.string()
            root.out.event.class.name = "SNMPTRAP-alliedtelesyn-ALLIEDTELESYN-MIB-firewallTrap"
            root.out.event.id = "SNMPTRAP-alliedtelesyn-ALLIEDTELESYN-MIB-firewallTrap"
            root.out.event.severity.code = 3
            root.out.event.severity.level = "Error"

            root.out.alliedtelesyn.flashGetFailure = this.trap.VarBinds.index(0).Value
            root.out.alliedtelesyn.flashOpenFailure = this.trap.VarBinds.index(1).Value
            root.out.alliedtelesyn.flashReadFailure = this.trap.VarBinds.index(2).Value
            root.out.alliedtelesyn.flashCloseFailure = this.trap.VarBinds.index(3).Value
            root.out.alliedtelesyn.flashCompleteFailure = this.trap.VarBinds.index(4).Value
            root.out.alliedtelesyn.flashWriteFailure = this.trap.VarBinds.index(5).Value
            root.out.alliedtelesyn.flashCreateFailure = this.trap.VarBinds.index(6).Value
            root.out.alliedtelesyn.flashPutFailure = this.trap.VarBinds.index(7).Value
            root.out.alliedtelesyn.flashDeleteFailure = this.trap.VarBinds.index(8).Value
            root.out.alliedtelesyn.flashCheckFailure = this.trap.VarBinds.index(9).Value
            root.out.alliedtelesyn.flashEraseFailure = this.trap.VarBinds.index(10).Value
            root.out.alliedtelesyn.flashCompactFailure = this.trap.VarBinds.index(11).Value
            root.out.alliedtelesyn.flashVerifyFailure = this.trap.VarBinds.index(12).Value
    - processors:
        - label: default
          mapping: |
            #!blobl,
            root = this
            root.out.event.category.name = "Unknown Trap"
